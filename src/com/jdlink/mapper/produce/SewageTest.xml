<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdlink.mapper.produce.SewageTestMapper">

    <!--添加污水化验单-->

<insert id="addSewageTest" parameterType="SewageTest">
    insert into t_pr_sewagetest(id, address, ph, COD, BOD5, N2, alkalinity, bicarbonate, nitrogen, phosphorus, remarks, sampleId,nowTime,alkalinityCaCo3,alkalinityHCO3,bicarbonateCaCo3,bicarbonateHCO3,checkState,dateTime)
    values
    (#{id},#{address},#{ph},#{COD},#{BOD5},#{N2},#{alkalinity},#{bicarbonate},#{nitrogen},#{phosphorus},#{remarks},#{sampleId},NOW(),#{alkalinityCaCo3},#{alkalinityHCO3},#{bicarbonateCaCo3},#{bicarbonateHCO3},'ToSubmit',NOW());
</insert>

    <select id="getSewageTestById" parameterType="String" resultType="SewageTest">
      select * from t_pr_sewagetest where id=#{id};
    </select>


    <update id="updateSewageTestById" parameterType="SewageTest">
        update t_pr_sewagetest set address=#{address},ph=#{ph},COD=#{COD},BOD5=#{BOD5},N2=#{N2},alkalinity=#{alkalinity},
        bicarbonate=#{bicarbonate},nitrogen=#{nitrogen},phosphorus=#{phosphorus},remarks=#{remarks},sampleId=#{sampleId},nowTime=NOW(),alkalinityHCO3=#{alkalinityHCO3},alkalinityCaCo3=#{alkalinityCaCo3},
        bicarbonateHCO3=#{bicarbonateHCO3},bicarbonateCaCo3=#{bicarbonateCaCo3},dateTime=NOW()
        where id=#{id};
    </update>

    <!--加载初始化页面-->
    <select id="loadSewageTestResultsList" resultType="SewageTest">
        select  * from t_pr_sewagetest order by dateTime desc
        <if test="start != null and count != null and count != 0">
            limit #{start}, #{count}
        </if>
    </select>

  <!--计算总数-->
    <select id="totalSewageTestRecord" resultType="int">
    select count(*) from t_pr_sewagetest;
    </select>


    <!--添加软水化验单-->
    <select id="addSoftTest" parameterType="SoftTest">
        insert into t_pr_softest (id, address, remarks, sampleId, turbidity, hardness, PH, electricalConductivity, basicity, phenolphthalein, nowTime,checkState) values
        (#{id},#{address},#{remarks},#{sampleId},#{turbidity},#{hardness},#{PH},#{electricalConductivity},#{basicity},#{phenolphthalein},NOW(),'ToSubmit');
    </select>

    <!--根据编号获取软水化验单信息-->
    <select id="getSoftTestById" parameterType="String" resultType="SoftTest">
        select * from t_pr_softest where id=#{id};
    </select>


    <!--更新软水化验单-->
    <update id="updateSoftTest" parameterType="SoftTest">
        update t_pr_softest set address=#{address},remarks=#{remarks},sampleId=#{sampleId},
        turbidity=#{turbidity},hardness=#{hardness},PH=#{PH},electricalConductivity=#{electricalConductivity},
        basicity=#{basicity},phenolphthalein=#{phenolphthalein},nowTime=NOW() where id=#{id}

    </update>

    <!--软水化验的总数-->
    <select id="totalSoftTestRecord" resultType="int">
        select count(*) from t_pr_softest;
    </select>

    <!--软水化验单初始化-->
    <select id="loadSoftTestResultsList" resultType="SoftTest">
        select * from t_pr_softest order  by  dateTime desc
        <if test="start != null and count != null and count != 0">
            limit #{start}, #{count}
        </if>
    </select>


    <!--更新污水-->
    <update id="updateSewaGeregistration" parameterType="SewaGeregistration">
        update t_pr_sewageregistration set sendingPerson=#{sendingPerson},address=#{address},
        laboratorySignatory=#{laboratorySignatory},nowTime=NOW() where id=#{id}
    </update>

    <!--更新软水/-->
    <update id="updateSoftGeregistration" parameterType="SewaGeregistration">
        update t_pr_softgeregistration set laboratorySignatory=#{laboratorySignatory},
        sendingPerson=#{sendingPerson},nowTime=NOW(),address=#{address},advice=#{advice}
        where  id=#{id};
    </update>

    <!--更新后做删除字表==>污水-->
    <delete id="deleteSewaGeregistrationById" parameterType="String">
        delete from t_pr_sewageregistrationitem where sampleinformationId=#{id};
    </delete>

    <!--更新后做删除字表==>软水-->
    <delete id="deleteSoftGeregistrationById" parameterType="String">
        delete from t_pr_softgeregistrationitem where sampleinformationId=#{id};
    </delete>

    <!--根据化验单号获取次生化验信息-->
    <select id="getSecondaryTestById" parameterType="String" resultType="SecondaryTest">
        select * from t_pr_secondarytest where id=#{id}
    </select>

    <!--更新次生化验单-->
    <update id="updateSecondaryTestById" parameterType="SecondaryTest">
        update t_pr_secondarytest set dateTime=#{dateTime}, wastesName=#{wastesName},
        scorchingRate=#{scorchingRate},water=#{water},remarks=#{remarks},nowTime=NOW() where id=#{id}
    </update>

    <!--添加次生化验单-->
    <insert id="addSecondaryTest" parameterType="SecondaryTest">
        insert into t_pr_secondarytest (id, dateTime, wastesName, scorchingRate, water, remarks, nowTime,checkState) values
        (#{id},NOW(),#{wastesName},#{scorchingRate},#{water},#{remarks},NOW(),'ToSubmit');
    </insert>

    <select id="loadPageSecondaryTestResultsList" resultType="SecondaryTest">
        select * from t_pr_secondarytest order  by dateTime desc
        <if test="start != null and count != null and count != 0">
            limit #{start}, #{count}
        </if>
    </select>
<select id="totalSecondaryTestRecord" resultType="int">
    select count(*) from t_pr_secondarytest;
</select>


    <!--更新次生送样信息主表-->
    <update id="updateSecondarySample" parameterType="SecondarySample">
        update t_pr_secondarysample set sendingPerson=#{sendingPerson},sendingPerson=#{sendingPerson},
        address=#{address}, laboratorySignatory=#{laboratorySignatory},nowTime=NOW()
        where  id=#{id}
    </update>
    <delete id="deleteSecondarySampleItem" parameterType="String">
        delete from t_pr_secondarysampleitem where sampleinformationId=#{sampleinformationId};
    </delete>

    <!--提交污水化验单-->
    <update id="submitSewageTest" parameterType="String">
        update t_pr_sewagetest set  checkState='Submitted' where id=#{id};
    </update>

    <!--签收污水化验单-->
    <update id="confirmSewageTest" parameterType="String">
        update t_pr_sewagetest set  checkState='Confirm' where id=#{id};
    </update>

    <!--作废污水化验单-->
    <update id="cancelSewageTest" parameterType="String">
        update t_pr_sewagetest set  checkState='Invalid' where id=#{id};
    </update>
    <!--污水收样状态为待收样-->
    <update id="cancelSewageTestAfter" parameterType="String">
        update t_pr_sewageregistration set checkState ='ToCollected'  where id=#{id} ;
    </update>

    <!--提交软水化验单-->
    <update id="submitSoftTest" parameterType="String">
      update t_pr_softest set   checkState='Submitted' where id=#{id};
    </update>

    <!--签收软水化验单-->
    <update id="confirmSoftTest" parameterType="String">
           update t_pr_softest set   checkState='Confirm' where id=#{id};
    </update>
    <!--作废软水化验单-->
    <update id="cancelSoftTest" parameterType="String">
           update t_pr_softest set   checkState='Invalid' where id=#{id};
    </update>
    <!--作废软水化验单软水送样待收样-->
    <update id="cancelSoftTestAfter" parameterType="String">
           update t_pr_softgeregistration set   checkState='ToCollected' where id=#{id};
    </update>

    <!--提交次生化验单-->
    <update id="submitSecondaryTest" parameterType="String">
        update t_pr_secondarytest set   checkState='Submitted' where id=#{id};
    </update>

    <!--签收次生化验单-->
    <update id="confirmSecondaryTest" parameterType="String">
           update t_pr_secondarytest set   checkState='Confirm' where id=#{id};
    </update>

    <!--作废次生化验-->
    <update id="cancelSecondaryTest" parameterType="String">
           update t_pr_secondarytest set   checkState='Invalid' where id=#{id};
    </update>


    <!--作废次生化验次生送样待收样-->
    <update id="cancelSecondaryTestAfter" parameterType="String">
           update t_pr_secondarysample set   checkState='ToCollected' where id=#{id};
    </update>

    <!--查询所有的污水送样编号-->
    <select id="getAllSewageId" resultType="String">
        select id from  t_pr_sewageregistration;
    </select>

    <!--查询所有的软水送样编号-->
    <select id="getAllSoftId" resultType="String">
        select id from  t_pr_softgeregistration;
    </select>

    <!--查询所有的次生送样编号-->
    <select id="getAllSecondaryId" resultType="String">
        select id from  t_pr_secondarysample;
    </select>

    <!--查询所有的污水化验单号-->
    <select id="getAllSewageTestId" resultType="String">
        select id from  t_pr_sewagetest;
    </select>

    <!--查询所有的软水化验单号-->
    <select id="getAllSoftTestId" resultType="String">
      select id from  t_pr_softest;
    </select>

    <!--查询所有的次生化验单号-->
    <select id="getAllSecondaryTestId" resultType="String">
      select id from  t_pr_secondarytest;
    </select>

    <!--作废污水送样-->
    <update id="cancelSewaGeregistration" parameterType="String">
        update t_pr_sewageregistration set  checkState='Invalid' where id=#{id}
    </update>

    <!--作废软水送样-->
    <update id="cancelSoftGeregistration" parameterType="String">
         update t_pr_softgeregistration set  checkState='Invalid' where id=#{id}
    </update>

    <!--作废次生送样-->
    <update id="cancelSecondaryGeregistration" parameterType="String">
           update t_pr_secondarysample set  checkState='Invalid' where id=#{id}
    </update>
</mapper>

















