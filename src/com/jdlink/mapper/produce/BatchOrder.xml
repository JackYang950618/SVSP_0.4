<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdlink.mapper.produce.BatchOrderMapper">

    <!--添加配料单-->
<insert id="addBatchList">
    insert into t_pl_batchingorder(batchingDate,produceCompany,wastesName,wasteCategory,storage1,storage2,intelligent,storage1Batch,storage2Batch,intelligentBatch,allowance,handelCategory,batchingOrderId,inboundOrderDate,checkState) values
    (#{batchingDate},#{produceCompany.clientId},#{wastesName},#{wasteCategory},#{storage1},#{storage2},#{intelligent},#{storage1Batch},#{storage2Batch},#{intelligentBatch},#{allowance},#{handelCategory},#{batchingOrderId},#{inboundOrderDate},'ToPick')
</insert>
    
<resultMap id="BatchingOrderRM" type="BatchingOrder">
    <association property="produceCompany" column="produceCompany" select="getClient"></association>
    <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
</resultMap>

    <!--获取客户信息-->
    <select id="getClient" resultType="Client">
        select * from client where clientId=#{produceCompany};
    </select>

    <!--获取配料单信息-->
    <select id="BatchList" resultMap="BatchingOrderRM">
        select * from t_pl_batchingorder order by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--根据配料单号获取配料信息-->
    <select id="getBatchById" resultMap="BatchingOrderRM">
    select * from t_pl_batchingorder where batchingOrderId=#{batchingOrderId};
</select>

    <resultMap id="WasteInventoryListBatRM" type="WasteInventory">
        <association property="produceCompany" column="clientId" select="getClientBat"></association>
     <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
    </resultMap>

    <!--查找客户信息-->
    <select id="getClientBat" resultType="Client">
        select * from client where clientId=#{clientId};
    </select>

    <!--查找仓库信息-->
    <select id="getwareHouse" resultType="WareHouse">
        select * from t_pl_warehouse where wareHouseId=#{wareHouseId};
    </select>

    <!--配料单新增页面获取危废仓储信息-->
    <select id="getWasteInventoryListBat" resultMap="WasteInventoryListBatRM">
        select * from t_pl_wasteinventory where boundType='WasteInbound' and actualCount>0.00;
    </select>

    <!--危废库存查询页面获取危废库存信息-->
    <select id="getWasteInventoryList" resultMap="WasteInventoryListBatRM">
    select * from t_pl_wasteinventory  where boundType='WasteInbound'and actualCount>0 order by  inboundDate desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--获得次生库存信息-->
    <select id="getSecInventoryListBat" resultMap="WasteInventoryListBatRM">
        select * from t_pl_wasteinventory where boundType='SecondaryInbound' order by inboundDate
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
</select>

    <!--根据入库单号明细编号查询库存信息-->
    <select id="getWasteInventoryByInboundOrderId" resultMap="WasteInventoryListBatRM" parameterType="String">
        select * from t_pl_wasteinventory where  inboundOrderItemId=#{inboundOrderItemId};
    </select>

 <!--获得配料单单号列表-->
    <select id="getBatchingOrderIdList" resultType="String">
        select batchingOrderId from t_pl_batchingorder  order by (CAST(batchingOrderId AS SIGNED) ) desc ;
    </select>

    <!--添加配料单-->
    <insert id="addBatchingOrderBat" parameterType="BatchingOrder">
        insert into t_pl_batchingorder(batchingOrderId,batchingDate,batchingNumber,createDate,creator,handelCategory,inboundOrderId,inboundOrderItemId,produceCompany,wareHouseId,wasteCategory,wastesName,nowTime,transferDraftId,checkState,processWay) values
        (#{batchingOrderId},#{batchingDate},#{batchingNumber},#{createDate},#{creator},#{handelCategory},#{inboundOrder.inboundOrderId},#{inboundOrderItemId},#{produceCompany.clientId},#{wareHouse.wareHouseId},#{wasteCategory},#{wastesName},NOW(),#{transferDraftId},'ToPick',#{processWay})
    </insert>

    <!--配料成功后扣减库存-->
    <update id="deducNumber" >
        update t_pl_wasteinventory set actualCount=actualCount-#{1} where inboundOrderItemId=#{0};
    </update>

    <!--添加领料单-->
    <insert id="addRequisition" parameterType="MaterialRequisitionOrder">
        insert into t_pl_materialrequisitionorder (materialRequisitionId,wastesName,transferDraftId,wareHouseId,clientId,wasteCategory,recipientsNumber,inboundOrderItemId,nowTime,checkState,departmentName,deputyGeneral,warehouseManager,guardian,materialManager,picker,pickerDate,handelCategory,processWay) values
        (#{materialRequisitionId},#{wastesName},#{transferDraftId},#{wareHouse.wareHouseId},#{client.clientId},#{wasteCategory},#{recipientsNumber},#{inboundOrderItemId},NOW(),'ToOutbound',#{departmentName},#{deputyGeneral},#{warehouseManager},#{guardian},#{materialManager},#{picker},#{pickerDate},#{handelCategory},#{processWay});
    </insert>

    <!--领料成功后更新配料单的信息状态为已领料-->
    <update id="updateBatchOrderState" parameterType="String">
        update t_pl_batchingorder set checkState='Picked' ,nowTime=NOW() where batchingOrderId=#{batchingOrderId};

    </update>

    <resultMap id="MaterialRequisitionListRM" type="MaterialRequisitionOrder">
        <association property="client" column="clientId" select="getClientMar"></association>
        <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
    </resultMap>

    <!--获得客户信息-->
    <select id="getClientMar" resultType="Client">
        select * from client where clientId=#{clientId};
    </select>

    <!--查询领料单 新增页面-->
    <select id="getMaterialRequisitionList" resultMap="MaterialRequisitionListRM">
        select * from  t_pl_materialrequisitionorder where checkState='Picked'
    </select>

    <!--更新领料单数据-->
    <update id="updateMaterialRequisitionOrder" parameterType="MaterialRequisitionOrder">
        update t_pl_materialrequisitionorder set departmentName=#{departmentName},deputyGeneral=#{deputyGeneral},
        warehouseManager=#{warehouseManager},guardian=#{guardian},materialManager=#{materialManager},
        picker=#{picker},pickerDate=NOW(),nowTime=NOW() ,checkState='ToOutbound'where materialRequisitionId=#{materialRequisitionId};
    </update>

    <!--根据领料编号获取信息-->
    <select id="getByMaterialRequisitionId" parameterType="String" resultMap="MaterialRequisitionListRM">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId}
    </select>

    <!--添加出库信息==》危废-->
    <insert id="addOutBoundOrder" parameterType="OutboundOrder">
        insert into  t_pl_outboundorder (outboundOrderId,clientId,wareHouseId,transferDraftId,wastesName,wasteCategory,outboundDate,creator,auditor,outboundNumber,equipment,nowTime,checkState,boundType,handelCategory,processWay,inboundOrderItemId)
        values
        (#{outboundOrderId},#{client.clientId},#{wareHouse.wareHouseId},#{transferDraftId},#{wastesName},#{wasteCategory},#{outboundDate},#{creator},#{auditor},#{outboundNumber},#{equipment},NOW(),'OutBounded','WasteOutbound',#{handelCategory},#{processWay},#{inboundOrderItemId})
    </insert>

    <!--出库完毕后更新领料单的信息为已出库-->
    <update id="updateMaterialRequisitionOrderCheck" parameterType="String">
        update t_pl_materialrequisitionorder set checkState="OutBounded",nowTime=NOW()
        where materialRequisitionId=#{materialRequisitionId};
    </update>

    <!--添加出库信息==》次生-->
    <insert id="addSecondary" parameterType="OutboundOrder">
        insert into  t_pl_outboundorder (outboundOrderId,clientId,wareHouseId,transferDraftId,wastesName,wasteCategory,outboundDate,creator,auditor,outboundNumber,equipment,nowTime,checkState,boundType,processWay,handelCategory,inboundOrderItemId,departmentName)
        values
        (#{outboundOrderId},#{client.clientId},#{wareHouse.wareHouseId},#{transferDraftId},#{wastesName},#{wasteCategory},#{outboundDate},#{creator},#{auditor},#{outboundNumber},#{equipment},NOW(),'OutBounded','SecondaryOutbound',#{processWay},#{handelCategory},#{inboundOrderItemId},#{departmentName})
    </insert>

    <resultMap id="WastesOutBoundRM" type="OutboundOrder">
        <association property="client" column="clientId" select="getClientMar"></association>
        <association property="wareHouse" column="wareHouseId" select="getwareHouse"></association>
    </resultMap>

    <!--加载危废出库-->
    <select id="loadWastesOutBoundList" resultMap="WastesOutBoundRM">
        select * from t_pl_outboundorder where  boundType='WasteOutbound'
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--根据出库单号查询出库信息++>危废-->
    <select id="getWastesOutBoundById" parameterType="String" resultMap="WastesOutBoundRM">
     select * from t_pl_outboundorder where  boundType='WasteOutbound'and  outboundOrderId=#{outboundOrderId};
</select>

    <!--根据出库单号查询出库信息++>次生-->

    <select id="getSecOutBoundById" parameterType="String" resultMap="WastesOutBoundRM">
     select * from t_pl_outboundorder where  boundType='SecondaryOutbound'and  outboundOrderId=#{outboundOrderId};
</select>

    <!--加载次生出库-->
    <select id="loadSecOutBoundList" resultMap="WastesOutBoundRM">
        select * from t_pl_outboundorder where boundType='SecondaryOutbound'
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <resultMap id="MaterialRequisitionOrderRM" type="MaterialRequisitionOrder">
        <collection property="client" column="clientId" select="getClientMar"></collection>
   <collection property="wareHouse" column="wareHouseId" select="getwareHouse"></collection>
    </resultMap>

    <!--加载领料单列表-->
    <select id="getMaterialRequisitionOrderList" resultMap="MaterialRequisitionOrderRM">
        select * from t_pl_materialrequisitionorder
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>
    
</mapper>