<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     <mapper namespace="com.jdlink.mapper.WasteInventoryMapper" >
    <!--查找库存信息-->
    <resultMap id="WasteInventoryRM" type="WasteInventory" autoMapping="true">
        <collection property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"></collection>
        <collection property="wareHouse" select="getWareHouse" column="warseHouseId" ofType="WareHouse"></collection>
        <collection property="produceCompany" column="clientId" select="getClient"></collection>
        <collection property="quotationItem" column="{clientId=clientId,wastesCode=wastesCode}" select="getQuotationItem"></collection>
    </resultMap>
    <!--查询报价单的信息-->
    <select id="getQuotationItem" resultType="QuotationItem">
        select  * from t_quotationitem  where clientId=#{clientId} and wastesCode=#{wastesCode};
    </select>
    <!--查询化验单信息给仓库-->
    <select id="getLaboratoryTest" parameterType="String" resultType="LaboratoryTest">
        select  * from t_pr_laboratorytest where laboratorytestnumber=#{laboratoryTestId};
    </select>
    <!--查询库存信息==>客户信息-->
    <resultMap id="WastesRM" type="Wastes">
        <result column="handelCategory" property="handleCategory" javaType="HandleCategory"></result>
        <association property="client" column="clientId" select="getClient"/>
    </resultMap>
    <!--查询配料单信息-->
    <resultMap id="BatchingOrderRM" type="BatchingOrder" autoMapping="true">
        <result  property="inboundOrderItemId" column="inboundOrderItemId"></result>
        <collection property="wasteInventory.inboundOrderItemId" column="inboundOrderItemId" select="getWasteInventory" javaType="WasteInventory"></collection>
        <collection property="wareHouse" column="wareHouseId" select="getWareHouse1" ofType="WareHouse"></collection>
    </resultMap>
    <!--查找配料单信息==>库存==>危废信息-->
    <resultMap id="WasteInventoryRM1" type="WasteInventory" autoMapping="true">
        <collection property="wastes" column="id" select="getWastes1" ofType="Wastes"></collection>
    </resultMap>
    <!--查询危废库存信息-->
    <select id="list" resultMap="WasteInventoryRM">
        select * from t_pl_wasteinventory  where boundType='WasteInbound' and  actualCount>0 order  by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>
    <!--查看次生库存信息-->
    <select id="list2" resultMap="WasteInventoryRM">
        select * from t_pl_wasteinventory  where boundType='SecondaryInbound' order  by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="list1" resultMap="WasteInventoryRM">
        select * from t_pl_wasteinventory order  by nowTime desc;
    </select>
    <select id="getWasteInventoryByInboundOrderId" resultMap="WasteInventoryRM" parameterType="String">
        select * from t_pl_wasteinventory where  inboundOrderItemId=#{inboundOrderItemId};
    </select>
    <!--查找库存信息==>仓库信息-->
    <select id="getWareHouse" resultType="WareHouse">
        select * from t_pl_warehouse where  warehouseId=#{warseHouseId}
    </select>
    <!--查找库存信息==>危废信息-->
    <select id="getWastes" parameterType="String"  resultMap="WastesRM">
     select * from t_wastes where id=#{wastes.id};
    </select>
    <select id="getClient" resultType="Client">
        select * from  client where clientId=#{clientId};
    </select>
    <select id="getBatchingOrderIdList" resultType="String"  >
        select batchingOrderId from t_pl_batchingorder  order by batchingOrderId desc ;

    </select>
    <select id="total" resultType="int">
    select count(*) from t_pl_batchingorder;
</select>
    <select id="total1" resultType="int">
    select count(*) from t_pl_batchingorder where checkState='ToPick';
</select>
    <insert id="addBatchingOrder" parameterType="BatchingOrder">
        insert into t_pl_batchingorder(batchingOrderId, batchingDate, createDate, remarks, wareHouseId,  recordstate,  batchingNumber,  nowTime, inboundOrderId,creator,checkState,inboundOrderItemId)
        values (#{batchingOrderId},#{batchingDate},#{createDate},#{remarks},#{wareHouse.wareHouseId},'Usable',#{batchingNumber},NOW(),#{inboundOrder.inboundOrderId},#{creator},'ToPick',#{inboundOrderItemId});
</insert>
    <update id="updateBatchingOrderOnId" parameterType="BatchingOrder">
        update t_pl_batchingorder set id=#{wasteInventory.wastes.id} where batchingOrderId=#{batchingOrderId}
    </update>
    <!--查询配料单信息-->
     <select id="getBatchingOrderList" resultType="BatchingOrder">
         select * from t_pl_batchingorder order by batchingOrderId desc ;
     </select>
    <!--查找配料信
    息==>库存信息-->
    <resultMap id="WasteInventoryRM3" type="WasteInventory">
        <result property="inboundOrderItemId" column="inboundOrderItemId" javaType="String"></result>
    </resultMap>
    <select id="getWasteInventory" resultMap="WasteInventoryRM3" parameterType="String">
        select  * from t_pl_wasteinventory where  inboundOrderItemId=#{batchingOrder.inboundOrderItemId};
    </select>
    <!--查找配料信息==>库存信息==》危废信息==>客户信息-->
    <resultMap id="WastesRM1" type="Wastes">
        <association property="client" column="clientId" select="getClient1" javaType="Client">
        </association>
    </resultMap>
    <!--查找配料信息==>库存信息==》危废信息-->
    <select id="getWastes1"  resultMap="WastesRM1" parameterType="String">
        select * from t_wastes where id=#{id};
    </select>
    <select id="getClient1" resultType="Client" parameterType="String">
        select companyName from client where  clientId=#{clientId}
    </select>
    <!--查询配料单信息==>库存信息-->
    <select id="getWareHouse1" resultType="WareHouse" parameterType="String">
        select  * from t_pl_warehouse where  warehouseId=#{warehouseId};
    </select>
    <!--高级查询-->
    <resultMap id="WasteInventoryRM2" type="WasteInventory">
        <collection property="wastes" column="id" select="getWastes2"></collection>
    </resultMap>
    <select id="getWastes2" resultType="Wastes" parameterType="WasteInventory">
        select * from t_wastes where id=#{id} and handleCategory=#{wasteInventory.swastes.handleCategory}
    </select>
    <select id="searchInventory" parameterType="WasteInventory" resultMap="WasteInventoryRM">
     select t_pl_wasteinventory.* ,t_wastes.* ,client.* from t_pl_wasteinventory  join t_wastes,client
    <where>
        <if test="wastes!=null">
            <if test="wastes.handleCategory!=null and wastes.handleCategory!=''"  >
                and  t_wastes.handleCategory=#{wastes.handleCategory} and t_wastes.id=t_pl_wasteinventory.id
            </if>
            <if test="wastes.wastesId!=null and wastes.wastesId!=''">
                and t_wastes.wastesId=#{wastes.wastesId} and t_wastes.id=t_pl_wasteinventory.id
            </if>
        </if>

        <if test="produceCompany!=null">
            <if test="produceCompany.companyName!=null and produceCompany.companyName!=''"  >
                and  t_wastes.clientId=#{produceCompany.companyName} and t_wastes.id=t_pl_wasteinventory.id
                and client.clientId= #{produceCompany.companyName}
            </if>

        </if>

    </where>

    </select>
    <!--获得剩余数量-->
    <update id="getWasteInventoryLeftNumber">
     update  t_pl_wasteinventory set leftNumeber=leftNumeber-#{1} where inboundOrderItemId=#{0};
    </update>
    <!--获得剩余数量-->
    <select id="getLeftNumber" resultType="float" parameterType="String">
        select  leftNumeber from t_pl_wasteinventory where  inboundOrderItemId=#{inboundOrderItemId}
    </select>
    <!--更新剩余库存量-->
    <update id="updateLeftNumber">
        update t_pl_wasteinventory set leftNumeber=actualCount;
           update  t_pl_wasteinventory set wastesCategory=(select wastesCategory from t_pl_inboundplanorder where transferDraftId=t_pl_wasteinventory.transferDraftId);
    </update>
    <!--添加成功后更新最新的数量==>改为更新所有数据 危废编码，转移联单，客户编号，危废编码，处置方式，进料方式，数量-->
    <update id="batchingNumber" parameterType="WasteInventory">
        update  t_pl_wasteinventory set actualCount=leftNumeber where inboundOrderItemId=#{inboundOrderItemId}
    </update>
    <!--更新配料单的数据-->
    <update id="updateBatching" parameterType="BatchingOrder">
        update  t_pl_batchingorder set  wastesCode=(select wastesCode from t_pl_wasteinventory where t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        produceCompany=(select  clientId from  t_pl_wasteinventory where t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        transferDraftId=(select  transferDraftId from t_pl_wasteinventory where  t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        handelCategory=(select  handleCategory from  t_pl_wasteinventory where t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        processWay=(select processWay from t_pl_wasteinventory where  t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        wasteCategory=(select  wastesCategory from  t_pl_wasteinventory where  t_pl_batchingorder.inboundOrderItemId=t_pl_wasteinventory.inboundOrderItemId),
        remarks=(select  remarks from  t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_batchingorder.inboundOrderItemId),
        laboratoryTestId=( select laboratoryTestId from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_batchingorder.inboundOrderItemId),
        packageType=(select  packageType from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_batchingorder.inboundOrderItemId),
        formType=(select  formType from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_batchingorder.inboundOrderItemId);

</update>
    <!--更新废物类别-->
    <update id="updateWastesCatogory">
        update  t_pl_wasteinventory set wastesCategory=(select wastesCategory from t_pl_inboundplanorder where transferDraftId=t_pl_inboundplanorder.transferDraftId);
    </update>
    <resultMap id="BH" type="BatchingOrder">
        <collection property="laboratoryTest"  column="{produceCompany=produceCompany,wastesCode=wastesCode}" select="getItem"></collection>
        <collection property="produceCompany" column="produceCompany" select="getClient2"></collection>
    </resultMap>
    <!--查找配料单的具体信息-->
    <select id="getBatching" resultMap="BH">
        select * from t_pl_batchingorder where checkState='ToPick'
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>
    <select id="getItem" resultType="LaboratoryTest">
        select * from t_pr_laboratorytest where clientId=#{produceCompany} and  wastesCode=#{wastesCode};
    </select>
    <select id="getClient2" resultType="Client">
        select * from  client where clientId=#{produceCompany};
    </select>
    <!--计算总共条数==>危废入库-->
    <select id="countInventory" resultType="int">
        select COUNT(*) from t_pl_wasteinventory where boundType='WasteInbound';
    </select>
    <!--配料单高级查询-->
    <resultMap id="BatchingOrder1" type="BatchingOrder">
        <result property="createDate" column="createDate" javaType="java.util.Date" jdbcType="DATE"></result>
        <collection property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"></collection>
        <collection property="produceCompany" column="clientId=produceCompany" select="getClient"></collection>
    </resultMap>
    <select id="searchBatchingOrder"  resultMap="BatchingOrder1">
        select t_pl_batchingorder.*,t_pr_laboratorytest.*,client.* from t_pl_batchingorder    join t_pr_laboratorytest,client
      <where>
            <if test="laboratoryTest != null and laboratoryTest != ''">
                <if test="laboratoryTest.wastesName!=null and laboratoryTest.wastesName!=''">
                    and t_pr_laboratorytest.wastesName like "%"#{laboratoryTest.wastesName}"%"
                </if>
            </if>
            <if test="produceCompany != null and produceCompany != ''">
                <if test="produceCompany.companyName!=null and produceCompany.companyName!=''">
                    and client.companyName like "%"#{produceCompany.companyName}"%" and t_pl_batchingorder.produceCompany=client.clientId and t_pl_batchingorder.laboratoryTestId=t_pr_laboratorytest.laboratorytestnumber
                </if>
            </if>
            <if test="processWay!=null and processWay!=''">
                and t_pl_batchingorder.processWay=#{processWay} and t_pl_batchingorder.produceCompany=client.clientId and t_pl_batchingorder.laboratoryTestId=t_pr_laboratorytest.laboratorytestnumber
            </if>
          <if test="time != null and time != ''">

           and  t_pl_batchingorder.createDate=#{time}

          </if>
      </where>
            order by createDate desc
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>
    <!--获取配料单高级查询总数-->
    <select id="searchBatchingTotal"  resultType="int">
      select  count(*) from  t_pl_batchingorder join t_pr_laboratorytest,client
        <where>
            <if test="laboratoryTest != null and laboratoryTest != ''">
                <if test="laboratoryTest.wastesName!=null and laboratoryTest.wastesName!=''">
                    and t_pr_laboratorytest.wastesName like "%"#{laboratoryTest.wastesName}"%"
                </if>
            </if>
            <if test="produceCompany != null and produceCompany != ''">
                <if test="produceCompany.companyName!=null and produceCompany.companyName!=''">
                    and client.companyName like "%"#{produceCompany.companyName}"%"
                </if>
            </if>
            <if test="processWay!=null and processWay!=''">
                and t_pl_batchingorder.processWay=#{processWay} and t_pl_batchingorder.produceCompany=client.clientId and t_pl_batchingorder.laboratoryTestId=t_pr_laboratorytest.laboratorytestnumber
            </if>
            <if test="createDate != null and createDate != ''">
                and (DATE_FORMAT(createDate,'%Y-%m-%d') like "%"#{createDate}"%"
              or DATE_FORMAT(createDate,'%Y%m%d') like "%"#{createDate}"%")
            </if>
            order by createDate desc
        </where>
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>
    <!--通过编号查询入库信息-->
    <resultMap id="InboundOrderItemIdRM" type="WasteInventory">
        <collection property="produceCompany" column="=clientId=clientId" select="getClient"></collection>
   <collection property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"></collection>
    </resultMap>
    <select id="getByInboundOrderItemId"  resultMap="InboundOrderItemIdRM" parameterType="String">
        select * from t_pl_wasteinventory where inboundOrderItemId=#{inboundOrderItemId};
    </select>
    <!--寻找最新的入库日期-->
     <select id="getNewestInBoundDate" resultType="Date">
         select  inboundDate from t_pl_wasteinventory  where  inboundDate is not null  order  by inboundDate;
     </select>
</mapper>