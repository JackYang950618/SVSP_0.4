<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jdlink.mapper.ProductionDailyMapper">

    <!--ProductionDaily映射集-->
    <resultMap id="ProductionDailyRM" type="ProductionDaily" autoMapping="true">
        <id property="id" column="id"/>
        <collection property="inboundOrderItemList" column="id" select="getInboundOrderItemList" ofType="com.jdlink.domain.MixingElement" javaType="ArrayList"/>
        <collection property="outboundOrderA2List" column="id" select="getOutboundOrderA2List" ofType="com.jdlink.domain.Inventory.OutboundOrder" javaType="ArrayList"/>
        <collection property="outboundOrderB2List" column="id" select="getOutboundOrderB2List" ofType="com.jdlink.domain.Inventory.OutboundOrder" javaType="ArrayList"/>
        <collection property="outboundOrderPrepare2List" column="id" select="getOutboundOrderPrepare2List" ofType="com.jdlink.domain.Inventory.OutboundOrder" javaType="ArrayList"/>
        <collection property="outboundOrderThirdList" column="id" select="getOutboundOrderThirdList" ofType="com.jdlink.domain.Inventory.OutboundOrder" javaType="ArrayList"/>
    </resultMap>
    <!--入库单映射集-->
    <resultMap id="InboundOrderItemRM" type="InboundOrderItem">
        <result column="wastesAmount" property="wastesAmount"/>
        <result column="wastesHandleCategory" property="handleCategory"/>
        <association column="clientId" property="produceCompany" select="getClient"/>
        <association property="wastes" javaType="com.jdlink.domain.Wastes">
            <result column="wastesName" property="name"/>
            <result column="wastesCode" property="wastesId"/>
        </association>
    </resultMap>
    <!--出库单映射集-->
    <resultMap id="OutboundOrderRM" type="OutboundOrder">
        <result column="wastesAmount" property="outboundNumber"/>
        <result column="wastesHandleCategory" property="handelCategory"/>
        <result column="disposalEquipment" property="equipment"/>
        <association column="clientId" property="client" select="getClient"/>
        <association property="laboratoryTest" javaType="com.jdlink.domain.Produce.LaboratoryTest">
            <result column="wastesName" property="wastesName"/>
            <result column="wastesCode" property="wastesCode"/>
        </association>
    </resultMap>
    <!--获取客户-->
    <select id="getClient" resultType="Client">
        select * from client where clientId=#{clientId};
    </select>
    <!--入库危废列表-->
    <select id="getInboundOrderItemList" resultMap="InboundOrderItemRM">
        select * from t_rp_productiondaily_inbounditem;
    </select>
    <!--A2出库列表-->
    <select id="getOutboundOrderA2List" resultMap="OutboundOrderRM">
        select * from t_rp_productiondaily_outbounditem where disposalEquipment='A2';
    </select>
    <!--B2出库列表-->
    <select id="getOutboundOrderB2List" resultMap="OutboundOrderRM">
        select * from t_rp_productiondaily_outbounditem where disposalEquipment='B2';
    </select>
    <!--备2出库列表-->
    <select id="getOutboundOrderPrepare2List" resultMap="OutboundOrderRM">
        select * from t_rp_productiondaily_outbounditem where disposalEquipment='Prepare2';
    </select>
    <!--三期设备出库列表-->
    <select id="getOutboundOrderThirdList" resultMap="OutboundOrderRM">
        select * from t_rp_productiondaily_outbounditem where disposalEquipment='ThirdPhasePretreatmentSystem';
    </select>

    <select id="countSewage" resultType="int">
          select count(*) from t_pr_sewageregistration where water="1";
    </select>

    <select id="listPageSewage" resultType="Sewage">
        select * from t_pr_sewage order by receiveDate desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="searchSewage" resultType="Sewage">
        select * from t_pr_sewage
        <where>
            <if test="keywords != null and keywords != ''">
                or DATE_FORMAT(receiveDate,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%e') like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or remarks like "%"#{keywords}"%"
                or COD = #{keywords}
                or BOD5 = #{keywords}
                or oxygen = #{keywords}
                or nitrogen = #{keywords}
                or lye = #{keywords}
                or PH = #{keywords}
            </if>
            <if test="name != null and name != ''">
                and name like "%"#{name}"%"
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks like "%"#{remarks}"%"
            </if>
        </where>
        order by receiveDate desc
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="searchCountSewage" resultType="int">
        select count(*) from t_pr_sewage
        <where>
            <if test="keywords != null and keywords != ''">
                or DATE_FORMAT(receiveDate,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%e') like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or remarks like "%"#{keywords}"%"
                or COD = #{keywords}
                or BOD5 = #{keywords}
                or oxygen = #{keywords}
                or nitrogen = #{keywords}
                or lye = #{keywords}
                or PH = #{keywords}
            </if>
            <if test="name != null and name != ''">
                and name like "%"#{name}"%"
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks like "%"#{remarks}"%"
            </if>
        </where>
    </select>

    <insert id="addSewage" parameterType="Sewage">
        insert into t_pr_sewage
        (receiveDate, name, remarks, COD, oxygen, nitrogen, lye, PH, BOD5)
        values
        (#{receiveDate},#{name},#{remarks},#{cod},#{oxygen},#{nitrogen},#{lye},#{ph},#{bod5})
    </insert>

    <select id="countSoftWater" resultType="int">
          select count(*) from t_pr_sewageregistration where water='0' ;
    </select>

    <select id="listPageSoftWater" resultType="SoftWater">
        select * from t_pr_softwater order by receiveDate desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="searchSoftWater" resultType="SoftWater">
        select * from t_pr_softwater
        <where>
            <if test="keywords != null and keywords != ''">
                or DATE_FORMAT(receiveDate,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%e') like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or remarks like "%"#{keywords}"%"
                or relativeAlkalinity = #{keywords}
                or dissolvedSolidForm = #{keywords}
                or PH = #{keywords}
                or alkalinity = #{keywords}
                or hardness = #{keywords}
                or electricalConductivity = #{keywords}
            </if>
            <if test="name != null and name != ''">
                and name like "%"#{name}"%"
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks like "%"#{remarks}"%"
            </if>
        </where>
        order by receiveDate desc
        <if test="page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <select id="searchCountSoftWater" resultType="int">
        select count(*) from t_pr_softwater
        <where>
            <if test="keywords != null and keywords != ''">
                or DATE_FORMAT(receiveDate,'%Y-%m-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y-%c-%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%m%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y%c%e') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%m.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%d') like "%"#{keywords}"%"
                or DATE_FORMAT(receiveDate,'%Y.%c.%e') like "%"#{keywords}"%"
                or name like "%"#{keywords}"%"
                or remarks like "%"#{keywords}"%"
                or relativeAlkalinity = #{keywords}
                or dissolvedSolidForm = #{keywords}
                or PH = #{keywords}
                or alkalinity = #{keywords}
                or hardness = #{keywords}
                or electricalConductivity = #{keywords}
            </if>
            <if test="name != null and name != ''">
                and name like "%"#{name}"%"
            </if>
            <if test="startDate !=null and startDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') >=  DATE_FORMAT(#{startDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="endDate !=null and endDate !=''">
                <![CDATA[ and DATE_FORMAT(receiveDate, '%Y-%m-%d') <=  DATE_FORMAT(#{endDate}, '%Y-%m-%d') ]]>
            </if>
            <if test="remarks != null and remarks != ''">
                and remarks like "%"#{remarks}"%"
            </if>
        </where>
    </select>

    <insert id="addSoftWater" parameterType="SoftWater">
        insert into t_pr_softwater
        (receiveDate, name, relativeAlkalinity, dissolvedSolidForm, PH, alkalinity, hardness, electricalConductivity, remarks)
        values
        (#{receiveDate},#{name},#{relativeAlkalinity},#{dissolvedSolidForm},#{ph},#{alkalinity},#{hardness},#{electricalConductivity},#{remarks})
    </insert>

    <!--获取日报的编号-->
    <select id="getProductionDailyId" resultType="int">
        SELECT MAX(id) FROM t_rp_productiondaily;
    </select>

    <!--获取日报的数量-->
    <select id="getProductionDailyCount" resultType="int">
        SELECT COUNT(*) FROM t_rp_productiondaily;
    </select>

    <!--获取日报的分页数据-->
    <select id="listProductionDailyByPage" resultType="ProductionDaily">
        SELECT * FROM t_rp_productiondaily ORDER BY nowTime DESC
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--通过编号获取日报-->
    <select id="getProductionDailyById" resultMap="ProductionDailyRM">
        SELECT * FROM t_rp_productiondaily WHERE id=#{id};
    </select>

    <!--增加日报-->
    <insert id="addProductionDaily1" parameterType="ProductionDaily">
        INSERT INTO t_rp_productiondaily (id, date, checkState, todayDisposalMedicalWastes, todayDisposalMedicalWastesDisposalDirect, todayDisposalMedicalWastesCooking,
        todayDisposalMedicalWastesAfterCooking, todayDisposalMedicalWastesAfterCookingInbound, todayDisposalMedicalWastesAfterCookingSend,
        todayDisposalMedicalWastesErrorNumber, todayDisposalMedicalWastesWetNumber, todayInboundMedicalWastes, todayInboundMedicalWastesCooking,
        todayInboundMedicalWastesErrorNumber, todayInboundMedicalWastesAfterCooking, todayInboundMedicalWastesAfterCookingInbound, todayInboundMedicalWastesWetNumber,
        todayInboundWastesBulk,todayInboundWastesCrushing,todayInboundWastesSludge,todayInboundWastesDistillation,todayInboundWastesSuspension,todayInboundWastesWasteLiquid,
        todayInboundWastesTotal,todayOutboundMedicalWastes, todayOutboundMedicalWastesDirectDisposal, todayOutboundMedicalWastesCooking, todayOutboundMedicalWastesAfterCooking,
        todayOutboundA2WastesBulk, todayOutboundA2WastesCrushing, todayOutboundA2WastesSludge, todayOutboundA2WastesDistillation, todayOutboundA2WastesSuspension,
        todayOutboundA2WastesWasteLiquid, todayOutboundA2MedicalWastes, todayOutboundPrepare2WastesBulk, todayOutboundPrepare2WastesCrushing, todayOutboundPrepare2WastesSludge,
        todayOutboundPrepare2WastesSuspension, todayOutboundPrepare2WastesWasteLiquid, todayOutboundPrepare2MedicalWastes, todayOutboundB2WastesBulk, todayOutboundB2WastesCrushing,
        todayOutboundB2WastesSludge, todayOutboundB2WastesDistillation, todayOutboundB2WastesSuspension, todayOutboundB2WastesWasteLiquid, todayOutboundB2MedicalWastes,
        todayOutboundThirdPretreatmentSystemWastesBulk, todayOutboundThirdPretreatmentSystemWastesCrushing, todayOutboundThirdPretreatmentSystemWastesSludge,
        todayOutboundThirdPretreatmentSystemWastesDistillation, todayOutboundThirdPretreatmentSystemWastesSuspension, todayOutboundThirdPretreatmentSystemWastesWasteLiquid,
        todayOutboundThirdPretreatmentSystemMedicalWastes, todayOutboundWastesBulk, todayOutboundWastesCrushing, todayOutboundWastesSludge, todayOutboundWastesDistillation,
        todayOutboundWastesSuspension, todayOutboundWastesWasteLiquid, todayOutboundWastesTotal, todayDisposalMedicalAuxiliaryNaclo, todayDisposalMedicalAuxiliaryDeodorant,
        todayDisposalMedicalAuxiliaryMedicalWastesBag, todayDisposalMedicalAuxiliaryMedicalPackingPlasticBag, todayDisposalMedicalAuxiliaryCollectionBox, todayDisposalMedicalAuxiliarySteam,
        todayDisposalMedicalAuxiliaryIndustrialWater, todayDisposalMedicalAuxiliaryElectricQuantity, todayDisposalSecondaryAuxiliaryCalcareousLime, todayDisposalSecondaryAuxiliaryCommonActivatedCarbon,
        todayDisposalSecondaryAuxiliaryActivatedCarbon, todayDisposalSecondaryAuxiliaryLye, todayDisposalSecondaryAuxiliarySalt, todayDisposalSecondaryAuxiliarySlagBag, todayDisposalSecondaryAuxiliaryFlyAshBag,
        todayDisposalSecondaryAuxiliaryDieselOil, todayDisposalSecondaryAuxiliaryIndustrialWater, todayDisposalSecondaryAuxiliaryElectricQuantity, todayDisposalSecondaryAuxiliaryWoodenPallets,
        todayDisposalThirdAuxiliaryCalcareousLime, todayDisposalThirdAuxiliaryCommonActivatedCarbon, todayDisposalThirdAuxiliaryActivatedCarbon, todayDisposalThirdAuxiliaryActivatedCarbonParticles,
        todayDisposalThirdAuxiliaryLye, todayDisposalThirdAuxiliaryCausticSoda, todayDisposalThirdAuxiliaryUrea, todayDisposalThirdAuxiliaryHydrochloricAcid, todayDisposalThirdAuxiliaryNahco3,
        todayDisposalThirdAuxiliaryFlour, todayDisposalThirdAuxiliaryDefoamer, todayDisposalThirdAuxiliaryFlocculant, todayDisposalThirdAuxiliarySoftWaterReducingAgent,
        todayDisposalThirdAuxiliarySoftWaterScaleInhibitor, todayDisposalThirdAuxiliaryAmmonia, todayDisposalThirdAuxiliaryWaterReducingAgent, todayDisposalThirdAuxiliaryWaterScaleInhibitor,
        todayDisposalThirdAuxiliaryNaclo, todayDisposalThirdAuxiliaryStandardBox, todayDisposalThirdAuxiliaryWoodenPallets, todayDisposalThirdAuxiliaryStandardTray_1m,
        todayDisposalThirdAuxiliaryStandardTray_1_2m, todayDisposalThirdAuxiliarySlagBag, todayDisposalThirdAuxiliaryFlyAshBag, todayDisposalThirdAuxiliaryTonBox,
        todayDisposalThirdAuxiliarySteam, todayDisposalThirdAuxiliaryDieselOil, todayDisposalThirdAuxiliaryNaturalGas, todayDisposalThirdAuxiliaryIndustrialWater,
        todayDisposalThirdAuxiliaryElectricQuantity, todayDisposalThirdAuxiliaryTapWaterQuantity, todayOutboundAuxiliaryCalcareousLime, todayOutboundAuxiliaryCommonActivatedCarbon,
        todayOutboundAuxiliaryActivatedCarbon, todayOutboundAuxiliaryActivatedCarbonParticles, todayOutboundAuxiliaryLye, todayOutboundAuxiliaryCausticSoda, todayOutboundAuxiliaryUrea,
        todayOutboundAuxiliaryHydrochloricAcid, todayOutboundAuxiliaryNahco3, todayOutboundAuxiliaryFlour, todayOutboundAuxiliaryDefoamer, todayOutboundAuxiliaryFlocculant,
        todayOutboundAuxiliarySoftWaterReducingAgent, todayOutboundAuxiliaryWaterScaleInhibitor, todayOutboundAuxiliaryNaclo, todayOutboundAuxiliaryDeodorant, todayOutboundAuxiliarySalt,
        todayOutboundAuxiliarySlagBag, todayOutboundAuxiliaryFlyAshBag, todayOutboundAuxiliaryMedicalWastesBag, todayOutboundAuxiliaryMedicalPackingPlasticBag, todayOutboundAuxiliaryCollectionBox,
        todayOutboundAuxiliaryStandardBox, todayOutboundAuxiliaryWoodenPallets, todayOutboundAuxiliaryStandardTray_1m, todayOutboundAuxiliaryStandardTray_1_2m,
        todayOutboundAuxiliaryTonBox, todayOutboundAuxiliarySteam, todayOutboundAuxiliaryDieselOil, todayOutboundAuxiliaryNaturalGas, todayOutboundAuxiliaryElectricQuantity,
        todayEquipmentA2RunningTime, todayEquipmentB2RunningTime, todayEquipmentPrepare2RunningTime, todayEquipmentSecondaryRunningTime, todayEquipmentThirdRunningTime,
        todayEquipmentA2StopTime, todayEquipmentB2StopTime, todayEquipmentPrepare2StopTime, todayEquipmentSecondaryStopTime, todayEquipmentThirdStopTime, todayEquipmentA2RunningRate,
        todayEquipmentB2RunningRate, todayEquipmentPrepare2RunningRate, todayEquipmentSecondaryRunningRate, todayEquipmentThirdRunningRate, todayDisposalSecondarySlag, todayDisposalSecondaryAsh,
        todayDisposalThirdSlag, todayDisposalThirdAsh, todayInboundSecondWastesSlag, todayInboundSecondWastesAsh, clientId, companyName,todayInboundAuxiliaryCalcareousLime,
        todayInboundAuxiliaryCommonActivatedCarbon,todayInboundAuxiliaryActivatedCarbon,todayInboundAuxiliaryActivatedCarbonParticles,todayInboundAuxiliaryLye,todayInboundAuxiliaryCausticSoda,
        todayInboundAuxiliaryUrea,todayInboundAuxiliaryHydrochloricAcid,todayInboundAuxiliaryNahco3,todayInboundAuxiliaryFlour,todayInboundAuxiliaryDefoamer,todayInboundAuxiliaryFlocculant,
        todayInboundAuxiliarySoftWaterReducingAgent,todayInboundAuxiliarySoftWaterScaleInhibitor,todayInboundAuxiliaryAmmonia,todayInboundAuxiliaryWaterReducingAgent,todayInboundAuxiliaryWaterScaleInhibitor,
        todayInboundAuxiliaryNaclo,todayInboundAuxiliaryDeodorant,todayInboundAuxiliarySalt,todayInboundAuxiliarySlagBag,todayInboundAuxiliaryFlyAshBag,todayInboundAuxiliaryMedicalWastesBag,
        todayInboundAuxiliaryMedicalPackingPlasticBag,todayInboundAuxiliaryCollectionBox,todayInboundAuxiliaryStandardBox,todayInboundAuxiliaryWoodenPallets,todayInboundAuxiliaryStandardTray_1m,
        todayInboundAuxiliaryStandardTray_1_2m,todayInboundAuxiliaryTonBox,todayInboundAuxiliarySteam,todayInboundAuxiliaryDieselOil,todayInboundAuxiliaryNaturalGas,todayInboundAuxiliaryElectricQuantity,
        todayInboundAuxiliaryIndustrialWater,todayInboundAuxiliaryTapWaterQuantity,
        monthInboundAuxiliaryCalcareousLime,monthInboundAuxiliaryCommonActivatedCarbon,monthInboundAuxiliaryActivatedCarbon,
        monthInboundAuxiliaryActivatedCarbonParticles,monthInboundAuxiliaryLye,monthInboundAuxiliaryCausticSoda,monthInboundAuxiliaryUrea,monthInboundAuxiliaryHydrochloricAcid,monthInboundAuxiliaryNahco3,
        monthInboundAuxiliaryFlour,monthInboundAuxiliaryDefoamer,monthInboundAuxiliaryFlocculant,monthInboundAuxiliarySoftWaterReducingAgent,monthInboundAuxiliarySoftWaterScaleInhibitor,monthInboundAuxiliaryAmmonia,
        monthInboundAuxiliaryWaterReducingAgent,monthInboundAuxiliaryWaterScaleInhibitor,monthInboundAuxiliaryNaclo,monthInboundAuxiliaryDeodorant,monthInboundAuxiliarySalt,monthInboundAuxiliarySlagBag,
        monthInboundAuxiliaryFlyAshBag,monthInboundAuxiliaryMedicalWastesBag,monthInboundAuxiliaryMedicalPackingPlasticBag,monthInboundAuxiliaryCollectionBox,monthInboundAuxiliaryStandardBox,monthInboundAuxiliaryWoodenPallets,
        monthInboundAuxiliaryStandardTray_1m,monthInboundAuxiliaryStandardTray_1_2m,monthInboundAuxiliaryTonBox,monthInboundAuxiliarySteam,monthInboundAuxiliaryDieselOil,monthInboundAuxiliaryNaturalGas,monthInboundAuxiliaryElectricQuantity,
        monthInboundAuxiliaryIndustrialWater,monthInboundAuxiliaryTapWaterQuantity,yearInboundAuxiliaryCalcareousLime,yearInboundAuxiliaryCommonActivatedCarbon,yearInboundAuxiliaryActivatedCarbon,yearInboundAuxiliaryActivatedCarbonParticles,
        yearInboundAuxiliaryLye,yearInboundAuxiliaryCausticSoda,yearInboundAuxiliaryUrea,yearInboundAuxiliaryHydrochloricAcid,yearInboundAuxiliaryNahco3,yearInboundAuxiliaryFlour,yearInboundAuxiliaryDefoamer,
        yearInboundAuxiliaryFlocculant,yearInboundAuxiliarySoftWaterReducingAgent,yearInboundAuxiliarySoftWaterScaleInhibitor,yearInboundAuxiliaryAmmonia,yearInboundAuxiliaryWaterReducingAgent,yearInboundAuxiliaryWaterScaleInhibitor,
        yearInboundAuxiliaryNaclo,yearInboundAuxiliaryDeodorant,yearInboundAuxiliarySalt,yearInboundAuxiliarySlagBag,yearInboundAuxiliaryFlyAshBag,yearInboundAuxiliaryMedicalWastesBag,yearInboundAuxiliaryMedicalPackingPlasticBag,
        yearInboundAuxiliaryCollectionBox,yearInboundAuxiliaryStandardBox,yearInboundAuxiliaryWoodenPallets,yearInboundAuxiliaryStandardTray_1m,yearInboundAuxiliaryStandardTray_1_2m,yearInboundAuxiliaryTonBox,
        yearInboundAuxiliarySteam,yearInboundAuxiliaryDieselOil,yearInboundAuxiliaryNaturalGas,yearInboundAuxiliaryElectricQuantity,yearInboundAuxiliaryIndustrialWater,yearInboundAuxiliaryTapWaterQuantity,
        monthInboundMedicalWastes,monthInboundMedicalWastesDirectDisposal,monthInboundMedicalWastesCooking,monthInboundMedicalWastesErrorNumber,monthInboundMedicalWastesAfterCooking,monthInboundMedicalWastesAfterCookingSend,
        monthInboundMedicalWastesAfterCookingInbound,monthInboundMedicalWastesWetNumber,monthInboundWastesBulk,monthInboundWastesCrushing,monthInboundWastesSludge,monthInboundWastesDistillation,
        monthInboundWastesSuspension,monthInboundWastesWasteLiquid,monthInboundWastesTotal,monthInboundSecondWastesSlag,monthInboundSecondWastesAsh,monthInboundSecondWastesBucket,
        monthOutboundMedicalWastes,monthOutboundMedicalWastesDirectDisposal,monthOutboundMedicalWastesCooking,monthOutboundMedicalWastesErrorNumber,monthOutboundMedicalWastesAfterCooking,monthOutboundMedicalWastesAfterCookingSend,
        monthOutboundMedicalWastesAfterCookingInbound,monthOutboundMedicalWastesWetNumber,monthOutboundWastesBulk,monthOutboundWastesCrushing,monthOutboundWastesSludge,monthOutboundWastesDistillation,monthOutboundWastesSuspension,
        monthOutboundWastesWasteLiquid,monthOutboundWastesTotal,monthOutboundSecondWastesSlag,monthOutboundSecondWastesAsh,monthOutboundSecondWastesBucket,
        yearInboundMedicalWastes,yearInboundMedicalWastesDirectDisposal,yearInboundMedicalWastesCooking,yearInboundMedicalWastesErrorNumber,yearInboundMedicalWastesAfterCooking,yearInboundMedicalWastesAfterCookingSend,
        yearInboundMedicalWastesAfterCookingInbound,yearInboundMedicalWastesWetNumber,yearInboundWastesBulk,yearInboundWastesCrushing,yearInboundWastesSludge,yearInboundWastesDistillation,yearInboundWastesSuspension,yearInboundWastesWasteLiquid,
        yearInboundWastesTotal,yearInboundSecondWastesSlag,yearInboundSecondWastesAsh,yearInboundSecondWastesBucket,yearOutboundMedicalWastes,yearOutboundMedicalWastesDirectDisposal,yearOutboundMedicalWastesCooking,yearOutboundMedicalWastesErrorNumber,
        yearOutboundMedicalWastesAfterCooking,yearOutboundMedicalWastesAfterCookingSend,yearOutboundMedicalWastesAfterCookingInbound,yearOutboundMedicalWastesWetNumber,yearOutboundWastesBulk,yearOutboundWastesCrushing,yearOutboundWastesSludge,
        yearOutboundWastesDistillation,yearOutboundWastesSuspension,yearOutboundWastesWasteLiquid,yearOutboundWastesTotal,yearOutboundSecondWastesSlag,yearOutboundSecondWastesAsh,yearOutboundSecondWastesBucket,
        monthBalanceMedicalWastes,monthBalanceMedicalWastesDirectDisposal,monthBalanceMedicalWastesCooking,monthBalanceMedicalWastesErrorNumber,monthBalanceMedicalWastesAfterCooking,monthBalanceMedicalWastesAfterCookingSend,monthBalanceMedicalWastesAfterCookingInbound,
        monthBalanceMedicalWastesWetNumber,monthBalanceWastesBulk,monthBalanceWastesCrushing,monthBalanceWastesSludge,monthBalanceWastesDistillation,monthBalanceWastesSuspension,
        monthBalanceWastesWasteLiquid,monthBalanceWastesTotal,monthBalanceSecondWastesSlag,monthBalanceSecondWastesAsh,monthBalanceSecondWastesBucket,
        todayInventoryMedicalWastes,todayInventoryMedicalWastesDirectDisposal,todayInventoryMedicalWastesCooking,todayInventoryMedicalWastesErrorNumber,todayInventoryMedicalWastesAfterCooking,todayInventoryMedicalWastesAfterCookingSend,
        todayInventoryMedicalWastesAfterCookingInbound,todayInventoryMedicalWastesWetNumber,todayInventoryWastesBulk,todayInventoryWastesCrushing,todayInventoryWastesSludge,todayInventoryWastesDistillation,todayInventoryWastesSuspension,
        todayInventoryWastesWasteLiquid,todayInventoryWastesTotal,todayInventorySecondWastesSlag,todayInventorySecondWastesAsh,todayInventorySecondWastesBucket)
        VALUES
        (#{id}, #{date}, #{checkState}, #{todayDisposalMedicalWastes},
        #{todayDisposalMedicalWastesDisposalDirect}, #{todayDisposalMedicalWastesCooking}, #{todayDisposalMedicalWastesAfterCooking},
        #{todayDisposalMedicalWastesAfterCookingInbound}, #{todayDisposalMedicalWastesAfterCookingSend}, #{todayDisposalMedicalWastesErrorNumber},
        #{todayDisposalMedicalWastesWetNumber}, #{todayInboundMedicalWastes}, #{todayInboundMedicalWastesCooking}, #{todayInboundMedicalWastesErrorNumber},
        #{todayInboundMedicalWastesAfterCooking}, #{todayInboundMedicalWastesAfterCookingInbound}, #{todayInboundMedicalWastesWetNumber},#{todayInboundWastesBulk},
        #{todayInboundWastesCrushing},#{todayInboundWastesSludge},#{todayInboundWastesDistillation},#{todayInboundWastesSuspension},#{todayInboundWastesWasteLiquid},
        #{todayInboundWastesTotal},#{todayOutboundMedicalWastes},#{todayOutboundMedicalWastesDirectDisposal}, #{todayOutboundMedicalWastesCooking}, #{todayOutboundMedicalWastesAfterCooking},
        #{todayOutboundA2WastesBulk},#{todayOutboundA2WastesCrushing}, #{todayOutboundA2WastesSludge}, #{todayOutboundA2WastesDistillation}, #{todayOutboundA2WastesSuspension},
        #{todayOutboundWastesWasteLiquid}, #{todayOutboundA2MedicalWastes}, #{todayOutboundPrepare2WastesBulk}, #{todayOutboundPrepare2WastesCrushing},
        #{todayOutboundPrepare2WastesSludge}, #{todayOutboundPrepare2WastesSuspension}, #{todayOutboundPrepare2WastesWasteLiquid}, #{todayOutboundPrepare2MedicalWastes},
        #{todayOutboundB2WastesBulk}, #{todayOutboundB2WastesCrushing}, #{todayOutboundB2WastesSludge}, #{todayOutboundB2WastesDistillation}, #{todayOutboundB2WastesSuspension},
        #{todayOutboundB2WastesWasteLiquid}, #{todayOutboundB2MedicalWastes}, #{todayOutboundThirdPretreatmentSystemWastesBulk}, #{todayOutboundThirdPretreatmentSystemWastesCrushing},
        #{todayOutboundThirdPretreatmentSystemWastesSludge}, #{todayOutboundThirdPretreatmentSystemWastesDistillation}, #{todayOutboundThirdPretreatmentSystemWastesSuspension},
        #{todayOutboundThirdPretreatmentSystemWastesWasteLiquid}, #{todayOutboundThirdPretreatmentSystemMedicalWastes}, #{todayOutboundWastesBulk}, #{todayOutboundWastesCrushing},
        #{todayOutboundWastesSludge}, #{todayOutboundWastesDistillation}, #{todayOutboundWastesSuspension}, #{todayOutboundWastesWasteLiquid}, #{todayOutboundWastesTotal},
        #{todayDisposalMedicalAuxiliaryNaclo}, #{todayDisposalMedicalAuxiliaryDeodorant}, #{todayDisposalMedicalAuxiliaryMedicalWastesBag}, #{todayDisposalMedicalAuxiliaryMedicalPackingPlasticBag},
        #{todayDisposalMedicalAuxiliaryCollectionBox}, #{todayDisposalMedicalAuxiliarySteam}, #{todayDisposalMedicalAuxiliaryIndustrialWater}, #{todayDisposalMedicalAuxiliaryElectricQuantity},
        #{todayDisposalSecondaryAuxiliaryCalcareousLime}, #{todayDisposalSecondaryAuxiliaryCommonActivatedCarbon}, #{todayDisposalSecondaryAuxiliaryActivatedCarbon},
        #{todayDisposalSecondaryAuxiliaryLye}, #{todayDisposalSecondaryAuxiliarySalt}, #{todayDisposalSecondaryAuxiliarySlagBag}, #{todayDisposalSecondaryAuxiliaryFlyAshBag},
        #{todayDisposalSecondaryAuxiliaryDieselOil}, #{todayDisposalSecondaryAuxiliaryIndustrialWater}, #{todayDisposalSecondaryAuxiliaryElectricQuantity},
        #{todayDisposalSecondaryAuxiliaryWoodenPallets}, #{todayDisposalThirdAuxiliaryCalcareousLime}, #{todayDisposalThirdAuxiliaryCommonActivatedCarbon},
        #{todayDisposalThirdAuxiliaryActivatedCarbon}, #{todayDisposalThirdAuxiliaryActivatedCarbonParticles}, #{todayDisposalThirdAuxiliaryLye}, #{todayDisposalThirdAuxiliaryCausticSoda},
        #{todayDisposalThirdAuxiliaryUrea}, #{todayDisposalThirdAuxiliaryHydrochloricAcid}, #{todayDisposalThirdAuxiliaryNahco3}, #{todayDisposalThirdAuxiliaryFlour},
        #{todayDisposalThirdAuxiliaryDefoamer}, #{todayDisposalThirdAuxiliaryFlocculant}, #{todayDisposalThirdAuxiliarySoftWaterReducingAgent},
        #{todayDisposalThirdAuxiliarySoftWaterScaleInhibitor}, #{todayDisposalThirdAuxiliaryAmmonia}, #{todayDisposalThirdAuxiliaryWaterReducingAgent},
        #{todayDisposalThirdAuxiliaryWaterScaleInhibitor}, #{todayDisposalThirdAuxiliaryNaclo}, #{todayDisposalThirdAuxiliaryStandardBox}, #{todayDisposalThirdAuxiliaryWoodenPallets},
        #{todayDisposalThirdAuxiliaryStandardTray_1m}, #{todayDisposalThirdAuxiliaryStandardTray_1_2m}, #{todayDisposalThirdAuxiliarySlagBag},
        #{todayDisposalThirdAuxiliaryFlyAshBag}, #{todayDisposalThirdAuxiliaryTonBox}, #{todayDisposalThirdAuxiliarySteam}, #{todayDisposalThirdAuxiliaryDieselOil},
        #{todayDisposalThirdAuxiliaryNaturalGas}, #{todayDisposalThirdAuxiliaryIndustrialWater}, #{todayDisposalThirdAuxiliaryElectricQuantity}, #{todayDisposalThirdAuxiliaryTapWaterQuantity},
        #{todayOutboundAuxiliaryCalcareousLime}, #{todayOutboundAuxiliaryCommonActivatedCarbon}, #{todayOutboundAuxiliaryActivatedCarbon}, #{todayOutboundAuxiliaryActivatedCarbonParticles},
        #{todayOutboundAuxiliaryLye}, #{todayOutboundAuxiliaryCausticSoda}, #{todayOutboundAuxiliaryUrea}, #{todayOutboundAuxiliaryHydrochloricAcid}, #{todayOutboundAuxiliaryNahco3},
        #{todayOutboundAuxiliaryFlour}, #{todayOutboundAuxiliaryDefoamer}, #{todayOutboundAuxiliaryFlocculant}, #{todayOutboundAuxiliarySoftWaterReducingAgent},
        #{todayOutboundAuxiliaryWaterScaleInhibitor}, #{todayOutboundAuxiliaryNaclo}, #{todayOutboundAuxiliaryDeodorant}, #{todayOutboundAuxiliarySalt}, #{todayOutboundAuxiliarySlagBag},
        #{todayOutboundAuxiliaryFlyAshBag}, #{todayOutboundAuxiliaryMedicalWastesBag}, #{todayOutboundAuxiliaryMedicalPackingPlasticBag}, #{todayOutboundAuxiliaryCollectionBox},
        #{todayOutboundAuxiliaryStandardBox}, #{todayOutboundAuxiliaryWoodenPallets}, #{todayOutboundAuxiliaryStandardTray_1m}, #{todayOutboundAuxiliaryStandardTray_1_2m},
        #{todayOutboundAuxiliaryTonBox}, #{todayOutboundAuxiliarySteam}, #{todayOutboundAuxiliaryDieselOil}, #{todayOutboundAuxiliaryNaturalGas}, #{todayOutboundAuxiliaryElectricQuantity},
        #{todayEquipmentA2RunningTime}, #{todayEquipmentB2RunningTime}, #{todayEquipmentPrepare2RunningTime}, #{todayEquipmentSecondaryRunningTime}, #{todayEquipmentThirdRunningTime},
        #{todayEquipmentA2StopTime}, #{todayEquipmentB2StopTime}, #{todayEquipmentPrepare2StopTime}, #{todayEquipmentSecondaryStopTime}, #{todayEquipmentThirdStopTime},
        #{todayEquipmentA2RunningRate}, #{todayEquipmentB2RunningRate}, #{todayEquipmentPrepare2RunningRate}, #{todayEquipmentSecondaryRunningRate}, #{todayEquipmentThirdRunningRate},
        #{todayDisposalSecondarySlag}, #{todayDisposalSecondaryAsh}, #{todayDisposalThirdSlag}, #{todayDisposalThirdAsh}, #{todayInboundSecondWastesSlag}, #{todayInboundSecondWastesAsh},
        #{client.clientId}, #{client.companyName},#{todayInboundAuxiliaryCalcareousLime},#{todayInboundAuxiliaryCommonActivatedCarbon},#{todayInboundAuxiliaryActivatedCarbon},
        #{todayInboundAuxiliaryActivatedCarbonParticles},#{todayInboundAuxiliaryLye},#{todayInboundAuxiliaryCausticSoda},#{todayInboundAuxiliaryUrea},#{todayInboundAuxiliaryHydrochloricAcid},
        #{todayInboundAuxiliaryNahco3},#{todayInboundAuxiliaryFlour},#{todayInboundAuxiliaryDefoamer},#{todayInboundAuxiliaryFlocculant},#{todayInboundAuxiliarySoftWaterReducingAgent},
        #{todayInboundAuxiliarySoftWaterScaleInhibitor},#{todayInboundAuxiliaryAmmonia},#{todayInboundAuxiliaryWaterReducingAgent},#{todayInboundAuxiliaryWaterScaleInhibitor},
        #{todayInboundAuxiliaryNaclo},#{todayInboundAuxiliaryDeodorant},#{todayInboundAuxiliarySalt},#{todayInboundAuxiliarySlagBag},#{todayInboundAuxiliaryFlyAshBag},#{todayInboundAuxiliaryMedicalWastesBag},
        #{todayInboundAuxiliaryMedicalPackingPlasticBag},#{todayInboundAuxiliaryCollectionBox},#{todayInboundAuxiliaryStandardBox},#{todayInboundAuxiliaryWoodenPallets},#{todayInboundAuxiliaryStandardTray_1m},
        #{todayInboundAuxiliaryStandardTray_1_2m},#{todayInboundAuxiliaryTonBox},#{todayInboundAuxiliarySteam},#{todayInboundAuxiliaryDieselOil},#{todayInboundAuxiliaryNaturalGas},#{todayInboundAuxiliaryElectricQuantity},
        #{todayInboundAuxiliaryIndustrialWater},#{todayInboundAuxiliaryTapWaterQuantity},
        #{monthInboundAuxiliaryCalcareousLime,#{monthInboundAuxiliaryCommonActivatedCarbon},#{monthInboundAuxiliaryActivatedCarbon},
        #{monthInboundAuxiliaryActivatedCarbonParticles},#{monthInboundAuxiliaryLye},#{monthInboundAuxiliaryCausticSoda},#{monthInboundAuxiliaryUrea},#{monthInboundAuxiliaryHydrochloricAcid},#{monthInboundAuxiliaryNahco3},
        #{monthInboundAuxiliaryFlour},#{monthInboundAuxiliaryDefoamer},#{monthInboundAuxiliaryFlocculant},#{monthInboundAuxiliarySoftWaterReducingAgent},#{monthInboundAuxiliarySoftWaterScaleInhibitor},#{monthInboundAuxiliaryAmmonia},
        #{monthInboundAuxiliaryWaterReducingAgent},#{monthInboundAuxiliaryWaterScaleInhibitor},#{monthInboundAuxiliaryNaclo},#{monthInboundAuxiliaryDeodorant},#{monthInboundAuxiliarySalt},#{monthInboundAuxiliarySlagBag},
        #{monthInboundAuxiliaryFlyAshBag},#{monthInboundAuxiliaryMedicalWastesBag},#{monthInboundAuxiliaryMedicalPackingPlasticBag},#{monthInboundAuxiliaryCollectionBox},#{monthInboundAuxiliaryStandardBox},#{monthInboundAuxiliaryWoodenPallets},
        #{monthInboundAuxiliaryStandardTray_1m},#{monthInboundAuxiliaryStandardTray_1_2m},#{monthInboundAuxiliaryTonBox},#{monthInboundAuxiliarySteam},#{monthInboundAuxiliaryDieselOil},#{monthInboundAuxiliaryNaturalGas},#{monthInboundAuxiliaryElectricQuantity},
        #{monthInboundAuxiliaryIndustrialWater},#{monthInboundAuxiliaryTapWaterQuantity},#{yearInboundAuxiliaryCalcareousLime},#{yearInboundAuxiliaryCommonActivatedCarbon},#{yearInboundAuxiliaryActivatedCarbon},#{yearInboundAuxiliaryActivatedCarbonParticles},
        #{yearInboundAuxiliaryLye},#{yearInboundAuxiliaryCausticSoda},#{yearInboundAuxiliaryUrea},#{yearInboundAuxiliaryHydrochloricAcid},#{yearInboundAuxiliaryNahco3},#{yearInboundAuxiliaryFlour},#{yearInboundAuxiliaryDefoamer},
        #{yearInboundAuxiliaryFlocculant},#{yearInboundAuxiliarySoftWaterReducingAgent},#{yearInboundAuxiliarySoftWaterScaleInhibitor},#{yearInboundAuxiliaryAmmonia},#{yearInboundAuxiliaryWaterReducingAgent},#{yearInboundAuxiliaryWaterScaleInhibitor},
        #{yearInboundAuxiliaryNaclo},#{yearInboundAuxiliaryDeodorant},#{yearInboundAuxiliarySalt},#{yearInboundAuxiliarySlagBag},#{yearInboundAuxiliaryFlyAshBag},#{yearInboundAuxiliaryMedicalWastesBag},#{yearInboundAuxiliaryMedicalPackingPlasticBag},
        #{yearInboundAuxiliaryCollectionBox},#{yearInboundAuxiliaryStandardBox},#{yearInboundAuxiliaryWoodenPallets},#{yearInboundAuxiliaryStandardTray_1m},#{yearInboundAuxiliaryStandardTray_1_2m},#{yearInboundAuxiliaryTonBox},
        #{yearInboundAuxiliarySteam},#{yearInboundAuxiliaryDieselOil},#{yearInboundAuxiliaryNaturalGas},#{yearInboundAuxiliaryElectricQuantity},#{yearInboundAuxiliaryIndustrialWater},#{yearInboundAuxiliaryTapWaterQuantity},
        #{monthInboundMedicalWastes},#{monthInboundMedicalWastesDirectDisposal},#{monthInboundMedicalWastesCooking},#{monthInboundMedicalWastesErrorNumber},#{monthInboundMedicalWastesAfterCooking},#{monthInboundMedicalWastesAfterCookingSend},
        #{monthInboundMedicalWastesAfterCookingInbound},#{monthInboundMedicalWastesWetNumber},#{monthInboundWastesBulk},#{monthInboundWastesCrushing},#{monthInboundWastesSludge},#{monthInboundWastesDistillation},
        #{monthInboundWastesSuspension},#{monthInboundWastesWasteLiquid},#{monthInboundWastesTotal},#{monthInboundSecondWastesSlag},#{monthInboundSecondWastesAsh},#{monthInboundSecondWastesBucket},
        #{monthOutboundMedicalWastes},#{monthOutboundMedicalWastesDirectDisposal},#{monthOutboundMedicalWastesCooking},#{monthOutboundMedicalWastesErrorNumber},#{monthOutboundMedicalWastesAfterCooking},#{monthOutboundMedicalWastesAfterCookingSend},
        #{monthOutboundMedicalWastesAfterCookingInbound},#{monthOutboundMedicalWastesWetNumber},#{monthOutboundWastesBulk},#{monthOutboundWastesCrushing},#{monthOutboundWastesSludge},#{monthOutboundWastesDistillation},#{monthOutboundWastesSuspension},
        #{monthOutboundWastesWasteLiquid},#{monthOutboundWastesTotal},#{monthOutboundSecondWastesSlag},#{monthOutboundSecondWastesAsh},#{monthOutboundSecondWastesBucket},
        #{yearInboundMedicalWastes},#{yearInboundMedicalWastesDirectDisposal},#{yearInboundMedicalWastesCooking},#{yearInboundMedicalWastesErrorNumber},#{yearInboundMedicalWastesAfterCooking},#{yearInboundMedicalWastesAfterCookingSend},
        #{yearInboundMedicalWastesAfterCookingInbound},#{yearInboundMedicalWastesWetNumber},#{yearInboundWastesBulk},#{yearInboundWastesCrushing},#{yearInboundWastesSludge},#{yearInboundWastesDistillation},#{yearInboundWastesSuspension},#{yearInboundWastesWasteLiquid},
        #{yearInboundWastesTotal},#{yearInboundSecondWastesSlag},#{yearInboundSecondWastesAsh},#{yearInboundSecondWastesBucket},#{yearOutboundMedicalWastes},#{yearOutboundMedicalWastesDirectDisposal},#{yearOutboundMedicalWastesCooking},#{yearOutboundMedicalWastesErrorNumber},
        #{yearOutboundMedicalWastesAfterCooking},#{yearOutboundMedicalWastesAfterCookingSend},#{yearOutboundMedicalWastesAfterCookingInbound},#{yearOutboundMedicalWastesWetNumber},#{yearOutboundWastesBulk},#{yearOutboundWastesCrushing},#{yearOutboundWastesSludge},
        #{yearOutboundWastesDistillation},#{yearOutboundWastesSuspension},#{yearOutboundWastesWasteLiquid},#{yearOutboundWastesTotal},#{yearOutboundSecondWastesSlag},#{yearOutboundSecondWastesAsh},#{yearOutboundSecondWastesBucket},
        #{monthBalanceMedicalWastes},#{monthBalanceMedicalWastesDirectDisposal},#{monthBalanceMedicalWastesCooking},#{monthBalanceMedicalWastesErrorNumber},#{monthBalanceMedicalWastesAfterCooking},#{monthBalanceMedicalWastesAfterCookingSend},#{monthBalanceMedicalWastesAfterCookingInbound},
        #{monthBalanceMedicalWastesWetNumber},#{monthBalanceWastesBulk},#{monthBalanceWastesCrushing},#{monthBalanceWastesSludge},#{monthBalanceWastesDistillation},#{monthBalanceWastesSuspension},
        #{monthBalanceWastesWasteLiquid},#{monthBalanceWastesTotal},#{monthBalanceSecondWastesSlag},#{monthBalanceSecondWastesAsh},#{monthBalanceSecondWastesBucket},
        #{todayInventoryMedicalWastes},#{todayInventoryMedicalWastesDirectDisposal},#{todayInventoryMedicalWastesCooking},#{todayInventoryMedicalWastesErrorNumber},#{todayInventoryMedicalWastesAfterCooking},#{todayInventoryMedicalWastesAfterCookingSend},
        #{todayInventoryMedicalWastesAfterCookingInbound},#{todayInventoryMedicalWastesWetNumber},#{todayInventoryWastesBulk},#{todayInventoryWastesCrushing},#{todayInventoryWastesSludge},#{todayInventoryWastesDistillation},#{todayInventoryWastesSuspension},
        #{todayInventoryWastesWasteLiquid},#{todayInventoryWastesTotal},#{todayInventorySecondWastesSlag},#{todayInventorySecondWastesAsh},#{todayInventorySecondWastesBucket});

        <if test="inboundOrderItemList.size() > 0">
            <foreach collection="inboundOrderItemList" item="inboundOrderItem" index="index">
                INSERT INTO t_rp_productiondaily_inbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory) VALUES
                (#{id}, #{inboundOrderItem.wastes.name}, #{inboundOrderItem.wastes.wastesId}, #{inboundOrderItem.produceCompany.clientId}, #{inboundOrderItem.wastesAmount}, #{inboundOrderItem.handleCategory});
            </foreach>
        </if>

        <if test="outboundOrderA2List.size() > 0">
            <foreach collection="outboundOrderA2List" item="outboundOrderA2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderA2.laboratoryTest.wastesName}, #{outboundOrderA2.laboratoryTest.wastesCode}, #{outboundOrderA2.laboratoryTest.client.clientId},
                #{outboundOrderA2.outboundNumber}, #{outboundOrderA2.handelCategory}, #{outboundOrderA2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderB2List.size() > 0">
            <foreach collection="outboundOrderB2List" item="outboundOrderB2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderB2.laboratoryTest.wastesName}, #{outboundOrderB2.laboratoryTest.wastesCode}, #{outboundOrderB2.laboratoryTest.client.clientId},
                #{outboundOrderB2.outboundNumber}, #{outboundOrderB2.handelCategory}, #{outboundOrderB2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderPrepare2List.size() > 0">
            <foreach collection="outboundOrderPrepare2List" item="outboundOrderPrepare2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderPrepare2.laboratoryTest.wastesName}, #{outboundOrderPrepare2.laboratoryTest.wastesCode}, #{outboundOrderPrepare2.laboratoryTest.client.clientId},
                #{outboundOrderPrepare2.outboundNumber}, #{outboundOrderPrepare2.handelCategory}, #{outboundOrderPrepare2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderThirdList.size() > 0">
            <foreach collection="outboundOrderThirdList" item="outboundOrderThird" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderThird.laboratoryTest.wastesName}, #{outboundOrderThird.laboratoryTest.wastesCode}, #{outboundOrderThird.laboratoryTest.client.clientId},
                #{outboundOrderThird.outboundNumber}, #{outboundOrderThird.handelCategory}, #{outboundOrderThird.equipment});
            </foreach>
        </if>
    </insert>

    <!--增加日报-->
    <insert id="addProductionDaily" parameterType="ProductionDaily">
        INSERT INTO t_rp_productiondaily (id, date, checkState, todayDisposalMedicalWastes, todayDisposalMedicalWastesDisposalDirect, todayDisposalMedicalWastesCooking,
        todayDisposalMedicalWastesAfterCooking, todayDisposalMedicalWastesAfterCookingInbound, todayDisposalMedicalWastesAfterCookingSend,
        todayDisposalMedicalWastesErrorNumber, todayDisposalMedicalWastesWetNumber, todayInboundMedicalWastes, todayInboundMedicalWastesCooking,
        todayInboundMedicalWastesErrorNumber, todayInboundMedicalWastesAfterCooking, todayInboundMedicalWastesAfterCookingInbound, todayInboundMedicalWastesWetNumber,
        todayInboundWastesBulk,todayInboundWastesCrushing,todayInboundWastesSludge,todayInboundWastesDistillation,todayInboundWastesSuspension,todayInboundWastesWasteLiquid,
        todayInboundWastesTotal,monthInboundWastesDistillation,yearInboundWastesDistillation,todayOutboundMedicalWastes, todayOutboundMedicalWastesDirectDisposal, todayOutboundMedicalWastesCooking, todayOutboundMedicalWastesAfterCooking,
        todayOutboundA2WastesBulk, todayOutboundA2WastesCrushing, todayOutboundA2WastesSludge, todayOutboundA2WastesDistillation, todayOutboundA2WastesSuspension,
        todayOutboundA2WastesWasteLiquid, todayOutboundA2MedicalWastes, todayOutboundPrepare2WastesBulk, todayOutboundPrepare2WastesCrushing, todayOutboundPrepare2WastesSludge,
        todayOutboundPrepare2WastesSuspension, todayOutboundPrepare2WastesWasteLiquid, todayOutboundPrepare2MedicalWastes, todayOutboundB2WastesBulk, todayOutboundB2WastesCrushing,
        todayOutboundB2WastesSludge, todayOutboundB2WastesDistillation, todayOutboundB2WastesSuspension, todayOutboundB2WastesWasteLiquid, todayOutboundB2MedicalWastes,
        todayOutboundThirdPretreatmentSystemWastesBulk, todayOutboundThirdPretreatmentSystemWastesCrushing, todayOutboundThirdPretreatmentSystemWastesSludge,
        todayOutboundThirdPretreatmentSystemWastesDistillation, todayOutboundThirdPretreatmentSystemWastesSuspension, todayOutboundThirdPretreatmentSystemWastesWasteLiquid,
        todayOutboundThirdPretreatmentSystemMedicalWastes, todayOutboundWastesBulk, todayOutboundWastesCrushing, todayOutboundWastesSludge, todayOutboundWastesDistillation,
        todayOutboundWastesSuspension, todayOutboundWastesWasteLiquid, todayOutboundWastesTotal, todayDisposalMedicalAuxiliaryNaclo, todayDisposalMedicalAuxiliaryDeodorant,
        todayDisposalMedicalAuxiliaryMedicalWastesBag, todayDisposalMedicalAuxiliaryMedicalPackingPlasticBag, todayDisposalMedicalAuxiliaryCollectionBox, todayDisposalMedicalAuxiliarySteam,
        todayDisposalMedicalAuxiliaryIndustrialWater, todayDisposalMedicalAuxiliaryElectricQuantity, todayDisposalSecondaryAuxiliaryCalcareousLime, todayDisposalSecondaryAuxiliaryCommonActivatedCarbon,
        todayDisposalSecondaryAuxiliaryActivatedCarbon, todayDisposalSecondaryAuxiliaryLye, todayDisposalSecondaryAuxiliarySalt, todayDisposalSecondaryAuxiliarySlagBag, todayDisposalSecondaryAuxiliaryFlyAshBag,
        todayDisposalSecondaryAuxiliaryDieselOil, todayDisposalSecondaryAuxiliaryIndustrialWater, todayDisposalSecondaryAuxiliaryElectricQuantity, todayDisposalSecondaryAuxiliaryWoodenPallets,
        todayDisposalThirdAuxiliaryCalcareousLime, todayDisposalThirdAuxiliaryCommonActivatedCarbon, todayDisposalThirdAuxiliaryActivatedCarbon, todayDisposalThirdAuxiliaryActivatedCarbonParticles,
        todayDisposalThirdAuxiliaryLye, todayDisposalThirdAuxiliaryCausticSoda, todayDisposalThirdAuxiliaryUrea, todayDisposalThirdAuxiliaryHydrochloricAcid, todayDisposalThirdAuxiliaryNahco3,
        todayDisposalThirdAuxiliaryFlour, todayDisposalThirdAuxiliaryDefoamer, todayDisposalThirdAuxiliaryFlocculant, todayDisposalThirdAuxiliarySoftWaterReducingAgent,
        todayDisposalThirdAuxiliarySoftWaterScaleInhibitor, todayDisposalThirdAuxiliaryAmmonia, todayDisposalThirdAuxiliaryWaterReducingAgent, todayDisposalThirdAuxiliaryWaterScaleInhibitor,
        todayDisposalThirdAuxiliaryNaclo, todayDisposalThirdAuxiliaryStandardBox, todayDisposalThirdAuxiliaryWoodenPallets, todayDisposalThirdAuxiliaryStandardTray_1m,
        todayDisposalThirdAuxiliaryStandardTray_1_2m, todayDisposalThirdAuxiliarySlagBag, todayDisposalThirdAuxiliaryFlyAshBag, todayDisposalThirdAuxiliaryTonBox,
        todayDisposalThirdAuxiliarySteam, todayDisposalThirdAuxiliaryDieselOil, todayDisposalThirdAuxiliaryNaturalGas, todayDisposalThirdAuxiliaryIndustrialWater,
        todayDisposalThirdAuxiliaryElectricQuantity, todayDisposalThirdAuxiliaryTapWaterQuantity, todayOutboundAuxiliaryCalcareousLime, todayOutboundAuxiliaryCommonActivatedCarbon,
        todayOutboundAuxiliaryActivatedCarbon, todayOutboundAuxiliaryActivatedCarbonParticles, todayOutboundAuxiliaryLye, todayOutboundAuxiliaryCausticSoda, todayOutboundAuxiliaryUrea,
        todayOutboundAuxiliaryHydrochloricAcid, todayOutboundAuxiliaryNahco3, todayOutboundAuxiliaryFlour, todayOutboundAuxiliaryDefoamer, todayOutboundAuxiliaryFlocculant,
        todayOutboundAuxiliarySoftWaterReducingAgent, todayOutboundAuxiliaryWaterScaleInhibitor, todayOutboundAuxiliaryNaclo, todayOutboundAuxiliaryDeodorant, todayOutboundAuxiliarySalt,
        todayOutboundAuxiliarySlagBag, todayOutboundAuxiliaryFlyAshBag, todayOutboundAuxiliaryMedicalWastesBag, todayOutboundAuxiliaryMedicalPackingPlasticBag, todayOutboundAuxiliaryCollectionBox,
        todayOutboundAuxiliaryStandardBox, todayOutboundAuxiliaryWoodenPallets, todayOutboundAuxiliaryStandardTray_1m, todayOutboundAuxiliaryStandardTray_1_2m,
        todayOutboundAuxiliaryTonBox, todayOutboundAuxiliarySteam, todayOutboundAuxiliaryDieselOil, todayOutboundAuxiliaryNaturalGas, todayOutboundAuxiliaryElectricQuantity,
        todayEquipmentA2RunningTime, todayEquipmentB2RunningTime, todayEquipmentPrepare2RunningTime, todayEquipmentSecondaryRunningTime, todayEquipmentThirdRunningTime,
        todayEquipmentA2StopTime, todayEquipmentB2StopTime, todayEquipmentPrepare2StopTime, todayEquipmentSecondaryStopTime, todayEquipmentThirdStopTime, todayEquipmentA2RunningRate,
        todayEquipmentB2RunningRate, todayEquipmentPrepare2RunningRate, todayEquipmentSecondaryRunningRate, todayEquipmentThirdRunningRate, todayDisposalSecondarySlag, todayDisposalSecondaryAsh,
        todayDisposalThirdSlag, todayDisposalThirdAsh, todayInboundSecondWastesSlag, todayInboundSecondWastesAsh, clientId, companyName,todayInboundAuxiliaryCalcareousLime,
        todayInboundAuxiliaryCommonActivatedCarbon,todayInboundAuxiliaryActivatedCarbon,todayInboundAuxiliaryActivatedCarbonParticles,todayInboundAuxiliaryLye,todayInboundAuxiliaryCausticSoda,
        todayInboundAuxiliaryUrea,todayInboundAuxiliaryHydrochloricAcid,todayInboundAuxiliaryNahco3,todayInboundAuxiliaryFlour,todayInboundAuxiliaryDefoamer,todayInboundAuxiliaryFlocculant,
        todayInboundAuxiliarySoftWaterReducingAgent,todayInboundAuxiliarySoftWaterScaleInhibitor,todayInboundAuxiliaryAmmonia,todayInboundAuxiliaryWaterReducingAgent,todayInboundAuxiliaryWaterScaleInhibitor,
        todayInboundAuxiliaryNaclo,todayInboundAuxiliaryDeodorant,todayInboundAuxiliarySalt,todayInboundAuxiliarySlagBag,todayInboundAuxiliaryFlyAshBag,todayInboundAuxiliaryMedicalWastesBag,
        todayInboundAuxiliaryMedicalPackingPlasticBag,todayInboundAuxiliaryCollectionBox,todayInboundAuxiliaryStandardBox,todayInboundAuxiliaryWoodenPallets,todayInboundAuxiliaryStandardTray_1m,
        todayInboundAuxiliaryStandardTray_1_2m,todayInboundAuxiliaryTonBox,todayInboundAuxiliarySteam,todayInboundAuxiliaryDieselOil,todayInboundAuxiliaryNaturalGas,todayInboundAuxiliaryElectricQuantity,
        todayInboundAuxiliaryIndustrialWater,todayInboundAuxiliaryTapWaterQuantity)
        VALUES (#{id}, #{date}, #{checkState}, #{todayDisposalMedicalWastes},
        #{todayDisposalMedicalWastesDisposalDirect}, #{todayDisposalMedicalWastesCooking}, #{todayDisposalMedicalWastesAfterCooking},
        #{todayDisposalMedicalWastesAfterCookingInbound}, #{todayDisposalMedicalWastesAfterCookingSend}, #{todayDisposalMedicalWastesErrorNumber},
        #{todayDisposalMedicalWastesWetNumber}, #{todayInboundMedicalWastes}, #{todayInboundMedicalWastesCooking}, #{todayInboundMedicalWastesErrorNumber},
        #{todayInboundMedicalWastesAfterCooking}, #{todayInboundMedicalWastesAfterCookingInbound}, #{todayInboundMedicalWastesWetNumber},#{todayInboundWastesBulk},
        #{todayInboundWastesCrushing},#{todayInboundWastesSludge},#{todayInboundWastesDistillation},#{todayInboundWastesSuspension},#{todayInboundWastesWasteLiquid},
        #{todayInboundWastesTotal},#{monthInboundWastesDistillation},#{yearInboundWastesDistillation},#{todayOutboundMedicalWastes},#{todayOutboundMedicalWastesDirectDisposal}, #{todayOutboundMedicalWastesCooking}, #{todayOutboundMedicalWastesAfterCooking},
        #{todayOutboundA2WastesBulk},#{todayOutboundA2WastesCrushing}, #{todayOutboundA2WastesSludge}, #{todayOutboundA2WastesDistillation}, #{todayOutboundA2WastesSuspension},
        #{todayOutboundWastesWasteLiquid}, #{todayOutboundA2MedicalWastes}, #{todayOutboundPrepare2WastesBulk}, #{todayOutboundPrepare2WastesCrushing},
        #{todayOutboundPrepare2WastesSludge}, #{todayOutboundPrepare2WastesSuspension}, #{todayOutboundPrepare2WastesWasteLiquid}, #{todayOutboundPrepare2MedicalWastes},
        #{todayOutboundB2WastesBulk}, #{todayOutboundB2WastesCrushing}, #{todayOutboundB2WastesSludge}, #{todayOutboundB2WastesDistillation}, #{todayOutboundB2WastesSuspension},
        #{todayOutboundB2WastesWasteLiquid}, #{todayOutboundB2MedicalWastes}, #{todayOutboundThirdPretreatmentSystemWastesBulk}, #{todayOutboundThirdPretreatmentSystemWastesCrushing},
        #{todayOutboundThirdPretreatmentSystemWastesSludge}, #{todayOutboundThirdPretreatmentSystemWastesDistillation}, #{todayOutboundThirdPretreatmentSystemWastesSuspension},
        #{todayOutboundThirdPretreatmentSystemWastesWasteLiquid}, #{todayOutboundThirdPretreatmentSystemMedicalWastes}, #{todayOutboundWastesBulk}, #{todayOutboundWastesCrushing},
        #{todayOutboundWastesSludge}, #{todayOutboundWastesDistillation}, #{todayOutboundWastesSuspension}, #{todayOutboundWastesWasteLiquid}, #{todayOutboundWastesTotal},
        #{todayDisposalMedicalAuxiliaryNaclo}, #{todayDisposalMedicalAuxiliaryDeodorant}, #{todayDisposalMedicalAuxiliaryMedicalWastesBag}, #{todayDisposalMedicalAuxiliaryMedicalPackingPlasticBag},
        #{todayDisposalMedicalAuxiliaryCollectionBox}, #{todayDisposalMedicalAuxiliarySteam}, #{todayDisposalMedicalAuxiliaryIndustrialWater}, #{todayDisposalMedicalAuxiliaryElectricQuantity},
        #{todayDisposalSecondaryAuxiliaryCalcareousLime}, #{todayDisposalSecondaryAuxiliaryCommonActivatedCarbon}, #{todayDisposalSecondaryAuxiliaryActivatedCarbon},
        #{todayDisposalSecondaryAuxiliaryLye}, #{todayDisposalSecondaryAuxiliarySalt}, #{todayDisposalSecondaryAuxiliarySlagBag}, #{todayDisposalSecondaryAuxiliaryFlyAshBag},
        #{todayDisposalSecondaryAuxiliaryDieselOil}, #{todayDisposalSecondaryAuxiliaryIndustrialWater}, #{todayDisposalSecondaryAuxiliaryElectricQuantity},
        #{todayDisposalSecondaryAuxiliaryWoodenPallets}, #{todayDisposalThirdAuxiliaryCalcareousLime}, #{todayDisposalThirdAuxiliaryCommonActivatedCarbon},
        #{todayDisposalThirdAuxiliaryActivatedCarbon}, #{todayDisposalThirdAuxiliaryActivatedCarbonParticles}, #{todayDisposalThirdAuxiliaryLye}, #{todayDisposalThirdAuxiliaryCausticSoda},
        #{todayDisposalThirdAuxiliaryUrea}, #{todayDisposalThirdAuxiliaryHydrochloricAcid}, #{todayDisposalThirdAuxiliaryNahco3}, #{todayDisposalThirdAuxiliaryFlour},
        #{todayDisposalThirdAuxiliaryDefoamer}, #{todayDisposalThirdAuxiliaryFlocculant}, #{todayDisposalThirdAuxiliarySoftWaterReducingAgent},
        #{todayDisposalThirdAuxiliarySoftWaterScaleInhibitor}, #{todayDisposalThirdAuxiliaryAmmonia}, #{todayDisposalThirdAuxiliaryWaterReducingAgent},
        #{todayDisposalThirdAuxiliaryWaterScaleInhibitor}, #{todayDisposalThirdAuxiliaryNaclo}, #{todayDisposalThirdAuxiliaryStandardBox}, #{todayDisposalThirdAuxiliaryWoodenPallets},
        #{todayDisposalThirdAuxiliaryStandardTray_1m}, #{todayDisposalThirdAuxiliaryStandardTray_1_2m}, #{todayDisposalThirdAuxiliarySlagBag},
        #{todayDisposalThirdAuxiliaryFlyAshBag}, #{todayDisposalThirdAuxiliaryTonBox}, #{todayDisposalThirdAuxiliarySteam}, #{todayDisposalThirdAuxiliaryDieselOil},
        #{todayDisposalThirdAuxiliaryNaturalGas}, #{todayDisposalThirdAuxiliaryIndustrialWater}, #{todayDisposalThirdAuxiliaryElectricQuantity}, #{todayDisposalThirdAuxiliaryTapWaterQuantity},
        #{todayOutboundAuxiliaryCalcareousLime}, #{todayOutboundAuxiliaryCommonActivatedCarbon}, #{todayOutboundAuxiliaryActivatedCarbon}, #{todayOutboundAuxiliaryActivatedCarbonParticles},
        #{todayOutboundAuxiliaryLye}, #{todayOutboundAuxiliaryCausticSoda}, #{todayOutboundAuxiliaryUrea}, #{todayOutboundAuxiliaryHydrochloricAcid}, #{todayOutboundAuxiliaryNahco3},
        #{todayOutboundAuxiliaryFlour}, #{todayOutboundAuxiliaryDefoamer}, #{todayOutboundAuxiliaryFlocculant}, #{todayOutboundAuxiliarySoftWaterReducingAgent},
        #{todayOutboundAuxiliaryWaterScaleInhibitor}, #{todayOutboundAuxiliaryNaclo}, #{todayOutboundAuxiliaryDeodorant}, #{todayOutboundAuxiliarySalt}, #{todayOutboundAuxiliarySlagBag},
        #{todayOutboundAuxiliaryFlyAshBag}, #{todayOutboundAuxiliaryMedicalWastesBag}, #{todayOutboundAuxiliaryMedicalPackingPlasticBag}, #{todayOutboundAuxiliaryCollectionBox},
        #{todayOutboundAuxiliaryStandardBox}, #{todayOutboundAuxiliaryWoodenPallets}, #{todayOutboundAuxiliaryStandardTray_1m}, #{todayOutboundAuxiliaryStandardTray_1_2m},
        #{todayOutboundAuxiliaryTonBox}, #{todayOutboundAuxiliarySteam}, #{todayOutboundAuxiliaryDieselOil}, #{todayOutboundAuxiliaryNaturalGas}, #{todayOutboundAuxiliaryElectricQuantity},
        #{todayEquipmentA2RunningTime}, #{todayEquipmentB2RunningTime}, #{todayEquipmentPrepare2RunningTime}, #{todayEquipmentSecondaryRunningTime}, #{todayEquipmentThirdRunningTime},
        #{todayEquipmentA2StopTime}, #{todayEquipmentB2StopTime}, #{todayEquipmentPrepare2StopTime}, #{todayEquipmentSecondaryStopTime}, #{todayEquipmentThirdStopTime},
        #{todayEquipmentA2RunningRate}, #{todayEquipmentB2RunningRate}, #{todayEquipmentPrepare2RunningRate}, #{todayEquipmentSecondaryRunningRate}, #{todayEquipmentThirdRunningRate},
        #{todayDisposalSecondarySlag}, #{todayDisposalSecondaryAsh}, #{todayDisposalThirdSlag}, #{todayDisposalThirdAsh}, #{todayInboundSecondWastesSlag}, #{todayInboundSecondWastesAsh},
        #{client.clientId}, #{client.companyName},#{todayInboundAuxiliaryCalcareousLime},#{todayInboundAuxiliaryCommonActivatedCarbon},#{todayInboundAuxiliaryActivatedCarbon},
        #{todayInboundAuxiliaryActivatedCarbonParticles},#{todayInboundAuxiliaryLye},#{todayInboundAuxiliaryCausticSoda},#{todayInboundAuxiliaryUrea},#{todayInboundAuxiliaryHydrochloricAcid},
        #{todayInboundAuxiliaryNahco3},#{todayInboundAuxiliaryFlour},#{todayInboundAuxiliaryDefoamer},#{todayInboundAuxiliaryFlocculant},#{todayInboundAuxiliarySoftWaterReducingAgent},
        #{todayInboundAuxiliarySoftWaterScaleInhibitor},#{todayInboundAuxiliaryAmmonia},#{todayInboundAuxiliaryWaterReducingAgent},#{todayInboundAuxiliaryWaterScaleInhibitor},
        #{todayInboundAuxiliaryNaclo},#{todayInboundAuxiliaryDeodorant},#{todayInboundAuxiliarySalt},#{todayInboundAuxiliarySlagBag},#{todayInboundAuxiliaryFlyAshBag},#{todayInboundAuxiliaryMedicalWastesBag},
        #{todayInboundAuxiliaryMedicalPackingPlasticBag},#{todayInboundAuxiliaryCollectionBox},#{todayInboundAuxiliaryStandardBox},#{todayInboundAuxiliaryWoodenPallets},#{todayInboundAuxiliaryStandardTray_1m},
        #{todayInboundAuxiliaryStandardTray_1_2m},#{todayInboundAuxiliaryTonBox},#{todayInboundAuxiliarySteam},#{todayInboundAuxiliaryDieselOil},#{todayInboundAuxiliaryNaturalGas},#{todayInboundAuxiliaryElectricQuantity},
        #{todayInboundAuxiliaryIndustrialWater},#{todayInboundAuxiliaryTapWaterQuantity});

        <if test="inboundOrderItemList.size() > 0">
            <foreach collection="inboundOrderItemList" item="inboundOrderItem" index="index">
                INSERT INTO t_rp_productiondaily_inbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory) VALUES
                (#{id}, #{inboundOrderItem.wastes.name}, #{inboundOrderItem.wastes.wastesId}, #{inboundOrderItem.produceCompany.clientId}, #{inboundOrderItem.wastesAmount}, #{inboundOrderItem.handleCategory});
            </foreach>
        </if>

        <if test="outboundOrderA2List.size() > 0">
            <foreach collection="outboundOrderA2List" item="outboundOrderA2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderA2.laboratoryTest.wastesName}, #{outboundOrderA2.laboratoryTest.wastesCode}, #{outboundOrderA2.laboratoryTest.client.clientId},
                #{outboundOrderA2.outboundNumber}, #{outboundOrderA2.handelCategory}, #{outboundOrderA2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderB2List.size() > 0">
            <foreach collection="outboundOrderB2List" item="outboundOrderB2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderB2.laboratoryTest.wastesName}, #{outboundOrderB2.laboratoryTest.wastesCode}, #{outboundOrderB2.laboratoryTest.client.clientId},
                #{outboundOrderB2.outboundNumber}, #{outboundOrderB2.handelCategory}, #{outboundOrderB2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderPrepare2List.size() > 0">
            <foreach collection="outboundOrderPrepare2List" item="outboundOrderPrepare2" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderPrepare2.laboratoryTest.wastesName}, #{outboundOrderPrepare2.laboratoryTest.wastesCode}, #{outboundOrderPrepare2.laboratoryTest.client.clientId},
                #{outboundOrderPrepare2.outboundNumber}, #{outboundOrderPrepare2.handelCategory}, #{outboundOrderPrepare2.equipment});
            </foreach>
        </if>
        <if test="outboundOrderThirdList.size() > 0">
            <foreach collection="outboundOrderThirdList" item="outboundOrderThird" index="index">
                INSERT INTO t_rp_productiondaily_outbounditem (productionDailyId, wastesName, wastesCode, clientId, wastesAmount, wastesHandleCategory, disposalEquipment) VALUES
                (#{id}, #{outboundOrderThird.laboratoryTest.wastesName}, #{outboundOrderThird.laboratoryTest.wastesCode}, #{outboundOrderThird.laboratoryTest.client.clientId},
                #{outboundOrderThird.outboundNumber}, #{outboundOrderThird.handelCategory}, #{outboundOrderThird.equipment});
            </foreach>
        </if>
    </insert>

    <!--通过日期范围获取生产日报-->
    <select id="getProductionDailyByDateRange" resultMap="ProductionDailyRM">
        select * from t_rp_productiondaily
        <![CDATA[
            WHERE DATE_FORMAT(date, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d')
            AND DATE_FORMAT(date, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        ]]>
        order by nowTime desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count}
        </if>
    </select>

    <!--通过日期范围获取生产日报-->
    <select id="getProductionDailyByDateRangeCount" resultType="int">
        select COUNT(*) from t_rp_productiondaily
        <![CDATA[
            WHERE DATE_FORMAT(date, '%Y-%m-%d') >=  DATE_FORMAT(#{beginTime}, '%Y-%m-%d')
            AND DATE_FORMAT(date, '%Y-%m-%d') <=  DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        ]]>;
    </select>

    <!--搜索日报-->
    <select id="searchProductionDaily" resultMap="ProductionDailyRM">
        select * from t_rp_productiondaily
        <where>
            <if test="keyword != null and keyword != ''">
                and (DATE_FORMAT(date,'%Y-%m-%d') like "%"#{keyword}"%")
                or companyName like "%"#{keyword}"%"
                or checkState=#{keyword}
            </if>
            <if test="parkingReason != null and parkingReason != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(date,'%Y-%m-%d') >= #{parkingReason})
                ]]>
            </if>
            <if test="otherIssue != null and otherIssue != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(date,'%Y-%m-%d') <= #{otherIssue})
                ]]>
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
        </where>
        order by  nowTime desc
        <if test="page != null and page.start != null and page.count != null">
            limit #{page.start}, #{page.count};
        </if>
    </select>

    <!--搜索日报的数量-->
    <select id="searchProductionDailyCount" resultType="int">
        select count(*) from t_rp_productiondaily
        <where>
            <if test="keyword != null and keyword != ''">
                and (DATE_FORMAT(date,'%Y-%m-%d') like "%"#{keyword}"%")
                or companyName like "%"#{keyword}"%"
                or checkState=#{keyword}
            </if>
            <if test="parkingReason != null and parkingReason != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(date,'%Y-%m-%d') >= #{parkingReason})
                ]]>
            </if>
            <if test="otherIssue != null and otherIssue != ''">
                <!--用searchDate来代装创建日期数据，防止被自动赋成日期格式的数据-->
                <![CDATA[
                and (DATE_FORMAT(date,'%Y-%m-%d') <= #{otherIssue})
                ]]>
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState = #{checkState}
            </if>
        </where>
    </select>

    <!--更改日报的状态-->
    <update id="setProductionDailyState">
        update t_rp_productiondaily set checkState=#{checkState} where id=#{id};
    </update>

    <!--删除日报-->
    <delete id="deleteProductionDaily">
        delete from t_rp_productiondaily where id=#{id};
        delete from t_rp_productiondaily_inbounditem where productionDailyId=#{id};
        delete from t_rp_productiondaily_outbounditem where productionDailyId=#{id};
    </delete>

    <!--添加污水登记主表-->
    <insert id="addSewaGeregistration" parameterType="Sewageregistration">
        insert into  t_pr_sewageregistration(id,laboratorySignatory,sendingPerson,nowTime,water,address,clientId,checkState)
        values
        (#{id},#{laboratorySignatory},#{sendingPerson},NOW(),#{water},#{address},#{client.clientId},'ToCollected')
    </insert>

    <!--获得主表最新的主键-->
    <select id="getNewestId" resultType="String">
        select id from t_pr_sewageregistration order by nowTime desc;
    </select>

    <!--添加污水登记子表-->
    <insert id="addSewaGeregistrationItem" parameterType="SewageregistrationItem">
        insert into  t_pr_sewageregistrationitem(id,wastesCode, wastesName, sampleinformationId, ph, cod, bod5, o2, lye, n2,alkalinity,bicarbonate,nitrogen,phosphorus,turbidity,basicity,phenolphthalein,remarks,identifie) values
        (#{id},#{wastesCode},#{wastesName},#{sampleinformationId},#{ph},#{cod},#{bod5},#{o2},#{lye},#{n2},#{alkalinity},#{bicarbonate},#{nitrogen},#{phosphorus},#{turbidity},#{basicity},#{phenolphthalein},#{remarks},#{identifie})
    </insert>

    <!--添加软水登记主表-->
    <insert id="addSoftGeregistration" parameterType="Sewageregistration">
         insert into  t_pr_sewageregistration(id,laboratorySignatory,sendingPerson,nowTime,water,address,clientId,checkState)
        values
        (#{id},#{laboratorySignatory},#{sendingPerson},NOW(),#{water},#{address},#{client.clientId},'ToCollected')
    </insert>
    <!--添加软水登记字表表-->
    <insert id="addSoftGeregistrationItem" parameterType="SewageregistrationItem">
      insert into  t_pr_sewageregistrationitem(id,wastesCode, wastesName, sampleinformationId, ph, cod, bod5, o2, lye, n2,alkalinity,bicarbonate,nitrogen,phosphorus,turbidity,basicity,phenolphthalein,remarks,identifie,hardness,electricalConductivity,relativeAlkalinity,dissolvedSolidForm) values
        (#{id},#{wastesCode},#{wastesName},#{sampleinformationId},#{ph},#{cod},#{bod5},#{o2},#{lye},#{n2},#{alkalinity},#{bicarbonate},#{nitrogen},#{phosphorus},#{turbidity},#{basicity},#{phenolphthalein},#{remarks},#{identifie},#{hardness},#{electricalConductivity},#{relativeAlkalinity},#{dissolvedSolidForm})
    </insert>

    <resultMap id="SewageregistrationRM" type="Sewageregistration" autoMapping="true">
        <result property="id" column="id"></result>
        <collection property="sewageregistrationItemList" column="id" select="getSewageregistrationItem"></collection>
       <collection property="client" column="clientId" select="getClient"></collection>
    </resultMap>
    <!--获取污水送样登记-->
    <select id="sewageList" resultMap="SewageregistrationRM">
        select * from t_pr_sewageregistration where water='1' order by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <!--获取软水送样登记-->
    <select id="softList" resultMap="SewageregistrationRM">
        select * from t_pr_sewageregistration where water='0' order by nowTime desc
        <if test="start != null and count != null">
            limit #{start}, #{count}
        </if>
    </select>

    <select id="getSewageregistrationItem" parameterType="String" resultType="SewageregistrationItem">
        select  * from t_pr_sewageregistrationitem where sampleinformationId=#{id};
    </select>

    <!--根据编号获取污水登记信息-->
    <select id="getSewaGeregistrationById" resultMap="SewageregistrationRM" parameterType="String">
           select * from t_pr_sewageregistration where id=#{id};
    </select>


    <!--确认送样-->
<update id="confirmSewaGeregistrationById" parameterType="String">
    update t_pr_sewageregistration set checkState='Collected',nowTime=NOW() where id=#{id};
</update>

    <!--拒收-->
    <update id="rejectSewaGeregistrationById" >
        update t_pr_sewageregistration set  checkState='Rejected',advice=#{1},nowTime=NOW() where id=#{0};
    </update>

    <select id="countById" resultType="int">
    select count(*) from t_pr_sampleinformation where id like "%"#{id}"%";
   </select>

    <select id="countByIdSew" resultType="int" parameterType="String">
    select count(*) from t_pr_sewageregistration where id like "%"#{id}"%";
  </select>

    <select id="wastesCountById" resultType="int" parameterType="String">
    select count(*) from t_pr_sewageregistrationitem where id like "%"#{id}"%";
  </select>

    <select id="getByWastesId" resultType="SewageregistrationItem" parameterType="String">
        select  * from t_pr_sewageregistrationitem where id=#{id};
    </select>

</mapper>
