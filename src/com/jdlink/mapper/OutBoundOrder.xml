<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdlink.mapper.OutboundOrderMapper">
    <!--查找出库单号-->
    <select id="check" resultType="String">
        select outboundOrderId from t_pl_outboundorder order by outboundOrderId desc;
    </select>
    <!--更新领料单为已出库-->
    <update id="updateMaterialRequisitionOrderCheck1" parameterType="OutboundOrder">
        update t_pl_materialrequisitionorder set checkState='OutBounded'where materialRequisitionId=#{materialRequisitionOrder.materialRequisitionId}
    </update>
    <resultMap id="OutBoundRM" type="OutboundOrder" autoMapping="true">
        <collection property="wareHouse" column="wareHouseId" select="getWareHouse"/>
        <collection property="client" column="clientId" select="getClient"></collection>
        <collection property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"></collection>
    </resultMap>
    <select id="getMaterialRequisition" resultType="MaterialRequisitionOrder">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId}
    </select>
    <select id="getLaboratoryTest" resultType="LaboratoryTest">
        select * from t_pr_laboratorytest where laboratorytestnumber=#{laboratoryTestId};
    </select>
    <!--加载出库信息列表-->
    <select id="loadOutBoundList" resultMap="OutBoundRM">
     select  * from  t_pl_outboundorder order  by nowTime desc;
    </select>
    <resultMap id="MaterialRequisitionOrderRM" type="MaterialRequisitionOrder">
        <collection property="wareHouse" column="warseHouseId" select="getWareHouse" ofType="WareHouse"></collection>
        <collection property="wastes" column="id" select="getWastes" ofType="Wastes"></collection>
        <collection property="client" column="clientId" select="getClient" ofType="Client"></collection>
    </resultMap>
    <select id="getWastes" parameterType="String" resultType="Wastes">
        select * from t_wastes where id=#{id}
    </select>
    <select id="getWareHouse" resultType="WareHouse">
        select * from t_pl_warehouse where warehouseId=#{warseHouseId}
    </select>
    <select id="getClient" resultMap="SalesManRM">
        select * from client where clientId=#{clientId}
    </select>
    <!--查找领料单的数据-->
    <select id="materialRequisitionOrderList" resultMap="MaterialRequisitionOrderRM" parameterType="String">
select  * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <select id="total" resultType="int">
        SELECT COUNT(*) FROM t_pl_outboundorder;
    </select>
    <select id="searchCount" parameterType="OutBoundOrder" resultType="int">
        SELECT COUNT(*) FROM t_pl_outboundorder
       <where>
        <if test="outboundOrderId != null and outboundOrderId != ''">
            and outboundOrderId like "%"#{outboundOrderId}"%"
        </if>
        <if test="wareHouse.wareHouseId != null and wareHouse.wareHouseId != ''">
            and wareHouseId like "%"#{wareHouse.wareHouseId}"%"
        </if>
        <if test="auditor != null and auditor != ''">
            and DATE_FORMAT(outboundDate,'%Y-%m-%d') like "%"#{auditor}"%"
            or DATE_FORMAT(outboundDate,'%Y%m%d') like "%"#{auditor}"%"
        </if>
        <if test="departmentName != null and departmentName != ''">
            and departmentName like "%"#{departmentName}"%"
        </if>
        <if test="recordState != null and recordState != ''">
            and recordState like "%"#{recordState}"%"
        </if>
        <if test="checkState != null and checkState != ''">
            and checkState like "%"#{checkState}"%"
        </if>
        <if test="transferDraftId != null and transferDraftId != ''">
            and transferDraftId like "%"#{transferDraftId}"%"
        </if>
        <if test="client.companyName != null and client.companyName != ''">
            and clientId in (select clientId from client where companyName like "%"#{client.companyName}"%")
        </if>
       </where>
    </select>
    <select id="getByOutBoundOrderId" parameterType="String" resultMap="OutBoundRM1">
        select * from t_pl_outboundorder where outboundOrderId=#{outboundOrderId}
    </select>
    <resultMap id="OutBoundRM1" type="OutboundOrder">
       <collection property="wareHouse" column="wareHouseId" select="getWareHouse"/>
        <collection property="client" column="clientId" select="getClient"></collection>
        <collection property="laboratoryTest" column="laboratoryTestId" select="getLaboratoryTest"></collection>
    <collection property="quotationItem" column="{clientId=clientId,wastesCode=wastesCode}" select="getQuotationItem"></collection>
    </resultMap>
    <select id="getQuotationItem" resultType="QuotationItem">
        select  * from t_quotationitem where clientId=#{clientId} and  wastesCode=#{wastesCode};
    </select>
    <!--//查找领料单的数据-->
    <select id="materialRequisitionOrderList1" resultMap="MaterialRequisitionOrderRM" parameterType="String">
select  * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <resultMap id="MaterialRequisitionOrderRM1" type="MaterialRequisitionOrder">
        <collection property="wareHouse" column="warseHouseId1" select="getWareHouse" ofType="WareHouse"></collection>
        <collection property="wastes" column="id" select="getWastes1" ofType="Wastes"></collection>
        <collection property="client" column="clientId" select="getClient1" ofType="Client"></collection>
    </resultMap>
    <select id="getWastes1" parameterType="String" resultType="Wastes">
    select * from t_wastes where id=#{id}</select>
    <select id="getWareHouse1" resultType="WareHouse">
        select * from t_pl_warehouse where warehouseId=#{warseHouseId}
    </select>
    <resultMap id="SalesManRM" type="Client">
        <collection property="salesman" column="salesmanId" select="getSalesMan" ofType="Salesman"></collection>
    </resultMap>
    <select id="getClient1" resultType="Client">
        select * from client where clientId=#{clientId}
    </select>
    <select id="getSalesMan" resultType="Salesman">
        select * from salesman where salesmanId=#{salesmanId}
    </select>
    <!--更新出库单的数据-->
    <update id="updateOutBoundOrder" parameterType="String">
        update t_pl_outboundorder set
         transferDraftId=(select  transferDraftId from t_pl_materialrequisitionorder where t_pl_outboundorder.materialRequisitionId=t_pl_materialrequisitionorder.materialRequisitionId),
        recordState=(select  t_pl_materialrequisitionorder.recordState from t_pl_materialrequisitionorder where t_pl_outboundorder.materialRequisitionId=t_pl_materialrequisitionorder.materialRequisitionId),
        clientId=(select  clientId from t_pl_materialrequisitionorder where t_pl_outboundorder.materialRequisitionId=t_pl_materialrequisitionorder.materialRequisitionId),
        handelCategory=(select  handelCategory from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        processWay=(select processWay from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        wasteCategory=(select wasteCategory from  t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        wastesCode=(select  wastesCode from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        inboundOrderItemId=(select inboundOrderItemId from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        recordState=(select recordState from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        guardian=(select  guardian from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        departmentName =(select  departmentName from t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        deputyGeneral=(SELECT  deputyGeneral from  t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        remarks=(select remarks from  t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        laboratoryTestId=(select laboratoryTestId from t_pl_materialrequisitionorder where  t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        packageType=(select packageType from  t_pl_materialrequisitionorder where t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId),
        formType=(select  formType from t_pl_materialrequisitionorder where  t_pl_materialrequisitionorder.materialRequisitionId=t_pl_outboundorder.materialRequisitionId)

        where outboundOrderId=#{outboundOrderId};
    </update>
    <select id="getSalesman1" resultType="Salesman">
    select * from salesman where salesmanId=#{salesmanId};
</select>
    <resultMap id="OutBoundOrderList" type="OutboundOrder" autoMapping="true">
        <!--领料单信息-->
        <collection property="materialRequisitionOrder" column="materialRequisitionId"
                    select="getMaterialRequisitionOrder" ofType="MaterialRequisitionOrder"></collection>
        <!--危废信息-->
        <collection property="wastes" column="id" select="getWastes" ofType="Wastes"></collection>
        <!--业务员-->
        <collection property="salesman" column="salesmanId" select="getSalesman1" ofType="Salesman"></collection>
        <!--客户-->
        <collection property="client" column="clientId" select="getClient1" ofType="Client"></collection>
        <!--仓库-->
        <collection property="wareHouse" column="wareHouseId" select="getWareHouse" ofType="WareHouse"></collection>
        <collection property="wasteInventory" column="inboundOrderId" select="getWasteInventory"
                    ofType="WasteInventory"></collection>
    </resultMap>
    <!--获取领料单信息-->
    <select id="getMaterialRequisitionOrder" resultType="MaterialRequisitionOrder" parameterType="String">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <!--根据配料单编号获取信息-->
    <select id="getOutBoundByMId" parameterType="String" resultMap="OutBoundRM1">
    select * from t_pl_outboundorder where materialRequisitionId=#{materialRequisitionId}
</select>
    <!--获取出库单信息的接口-->
    <select id="getOutBoundOrderList" resultMap="OutBoundOrderList">
        select  * from t_pl_outboundorder;
    </select>
    <!--根据Id获取出库单信息-->
    <select id="getById" parameterType="String" resultMap="OutBoundOrderList">
        select * from t_pl_outboundorder where outboundOrderId = #{id};
    </select>
    <!--查找出库单-->
    <select id="search" parameterType="OutBoundOrder" resultMap="OutBoundOrderList">
        select * from t_pl_outboundorder
        <where>
            <if test="outboundOrderId != null and outboundOrderId != ''">
                and outboundOrderId like "%"#{outboundOrderId}"%"
            </if>
            <if test="wareHouse.wareHouseId != null and wareHouse.wareHouseId != ''">
                and wareHouseId like "%"#{wareHouse.wareHouseId}"%"
            </if>
            <if test="auditor != null and auditor != ''">
                and DATE_FORMAT(outboundDate,'%Y-%m-%d') like "%"#{auditor}"%"
                or DATE_FORMAT(outboundDate,'%Y%m%d') like "%"#{auditor}"%"
            </if>
            <if test="departmentName != null and departmentName != ''">
                and departmentName like "%"#{departmentName}"%"
            </if>
            <if test="recordState != null and recordState != ''">
                and recordState like "%"#{recordState}"%"
            </if>
            <if test="checkState != null and checkState != ''">
                and checkState like "%"#{checkState}"%"
            </if>
            <if test="transferDraftId != null and transferDraftId != ''">
                and transferDraftId like "%"#{transferDraftId}"%"
            </if>
            <if test="client.companyName != null and client.companyName != ''">
                and clientId in (select clientId from client where companyName like "%"#{client.companyName}"%")
            </if>
        </where>
    </select>


    <!--添加危废出库单-->
    <insert id="addSecondary" parameterType="OutboundOrder">
        insert into t_pl_outboundorder(outboundOrderId,outboundNumber,nowTime,checkState,boundType,outboundDate,inboundOrderItemId,creator,departmentName,equipment) values
        (#{outboundOrderId},#{outboundNumber},NOW(),'OutBounded',#{boundType},#{outboundDate},#{inboundOrderItemId},#{creator},#{departmentName},#{equipment});
    </insert>
    <update id="updateSecondart" parameterType="OutboundOrder">
        update t_pl_outboundorder set
        recordState=(select recordState from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        handelCategory=(select handleCategory from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        processWay=(select  processWay from t_pl_wasteinventory where  t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        wasteCategory=(select  wasteCategory from t_pl_wasteinventory where  t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        laboratoryTestId=(select  laboratoryTestId from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        remarks=(select  remarks from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        clientId=(select  clientId from t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        packageType=(select packageType from  t_pl_wasteinventory where t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId),
        formType=(select  formType from  t_pl_wasteinventory where  t_pl_wasteinventory.inboundOrderItemId=t_pl_outboundorder.inboundOrderItemId)
        where outboundOrderId=#{outboundOrderId};
    </update>
    <!--更新危废库存的特有字段-->
    <resultMap id="RM1" type="OutboundOrder">
        <collection property="wasteInventory" column="inboundOrderId" ofType="WasteInventory"
                    select="getWasteInventory"></collection>
    </resultMap>
    <select id="getWasteInventory" resultMap="WasteInventoryRM" parameterType="String">
        select * from  t_pl_wasteinventory where inboundOrderId=#{inboundOrderId}
    </select>
    <resultMap id="WasteInventoryRM" type="WasteInventory">
        <collection property="produceCompany" column="clientId" select="getClient"></collection>
        <collection property="wastes" column="id" select="getWastes"></collection>
        <collection property="wareHouse" column="warseHouseId" select="getWareHouse"></collection>
    </resultMap>
    <!--根据入库单号-->
    <select id="getOutBoundByInId" parameterType="String" resultMap="RM1">
        select * from t_pl_outboundorder where inboundOrderId=#{inboundOrderId};
    </select>
    <!--更新次生出库单信息-->
    <update id="updateSecOutBoundOrder" parameterType="OutboundOrder">
     update  t_pl_outboundorder set
      id=#{wasteInventory.wastes.id},
      clientId=#{wasteInventory.produceCompany.clientId},
      salesmanId=#{wasteInventory.produceCompany.salesman.salesmanId},
      wareHouseId=#{wasteInventory.wareHouse.wareHouseId}
      where inboundOrderId=#{wasteInventory.inboundOrderId}
    </update>
    <update id="upWastesInventoryNumber" parameterType="OutboundOrder">
        update t_pl_wasteinventory set actualCount=actualCount-#{outboundNumber}
        where t_pl_wasteinventory.inboundOrderItemId=#{wasteInventory.inboundOrderItemId};
    </update>
    <!--根据出库单号获取进料方式-->
    <select id="getHandelCategoryById" resultType="HandleCategory" parameterType="String">
        select handelCategory from t_pl_outboundorder where  outboundOrderId=#{outboundOrderId};
    </select>
    <!--修改属性-->
    <update id="upHandelCategoryById">
        update t_pl_outboundorder set handelCategory=#{1},nowTime=NOW() WHERE outboundOrderId=#{0};
    </update>
    <!--根据时间范围查询出库单-->
    <select id="getOutBoundByRange" resultMap="OutBoundOrderList" >
            SELECT * FROM t_pl_outboundorder
            <![CDATA[WHERE DATE_FORMAT(outboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{0}, '%Y-%m-%d')
            AND DATE_FORMAT(outboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{1}, '%Y-%m-%d')]]>;
       </select>
    <!--根据时间范围以及设备查询出库单-->
    <select id="getOutBoundByDateAndEquipment" resultMap="OutBoundOrderList" >
            SELECT * FROM t_pl_outboundorder
            <![CDATA[WHERE DATE_FORMAT(outboundDate, '%Y-%m-%d') >=  DATE_FORMAT(#{0}, '%Y-%m-%d')
            AND DATE_FORMAT(outboundDate, '%Y-%m-%d') <=  DATE_FORMAT(#{1}, '%Y-%m-%d')]]> and equipment=#{3};
       </select>

</mapper>