<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jdlink.mapper.OutboundOrderMapper" >
<!--查找出库单号-->
    <select id="check" resultType="String">
        select outboundOrderId from t_pl_outboundorder order by outboundOrderId desc;
    </select>
    <!--更新领料单为已出库-->
    <update id="updateMaterialRequisitionOrderCheck1" parameterType="OutboundOrder">
        update t_pl_materialrequisitionorder set checkState='OutBounded'where materialRequisitionId=#{materialRequisitionOrder.materialRequisitionId}
    </update>
    <resultMap id="OutBoundRM" type="OutboundOrder">
        <collection property="materialRequisitionOrder" column="materialRequisitionId" select="materialRequisitionOrderList"></collection>
    </resultMap>
    <select id="getMaterialRequisition" resultType="MaterialRequisitionOrder">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId}
    </select>
    <!--加载出库信息列表-->
    <select id="loadOutBoundList" resultMap="OutBoundRM">
     select  * from  t_pl_outboundorder ;
    </select>
    <resultMap id="MaterialRequisitionOrderRM" type="MaterialRequisitionOrder">
        <collection property="wareHouse" column="warseHouseId" select="getWareHouse" ofType="WareHouse"></collection>
        <collection property="wastes" column="id" select="getWastes" ofType="Wastes"></collection>
        <collection property="client" column="clientId" select="getClient" ofType="Client" ></collection>
    </resultMap>
    <select id="getWastes" parameterType="String" resultType="Wastes">
        select * from t_wastes where id=#{id}
    </select>
    <select id="getWareHouse" resultType="WareHouse">
        select * from t_pl_warehouse where warehouseId=#{warseHouseId}
    </select>
    <select id="getClient" resultMap="SalesManRM">
        select * from client where clientId=#{clientId}
    </select>
    <!--查找领料单的数据-->
    <select id="materialRequisitionOrderList"  resultMap="MaterialRequisitionOrderRM" parameterType="String">
select  * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <select id="total" resultType="int">
        SELECT COUNT(*) FROM t_pl_outboundorder;
    </select>
    <select id="searchCount" parameterType="OutBoundOrder" resultType="int">
 SELECT COUNT(*) FROM t_pl_outboundorder;
    </select>
    <select id="getByOutBoundOrderId" parameterType="String" resultMap="OutBoundRM1">
        select * from t_pl_outboundorder where outboundOrderId=#{outboundOrderId}
    </select>
    <resultMap id="OutBoundRM1" type="OutboundOrder">
        <collection property="materialRequisitionOrder" column="materialRequisitionId" select="materialRequisitionOrderList1"></collection>
    </resultMap>
    <!--//查找领料单的数据-->
    <select id="materialRequisitionOrderList1"  resultMap="MaterialRequisitionOrderRM" parameterType="String">
select  * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <resultMap id="MaterialRequisitionOrderRM1" type="MaterialRequisitionOrder">
        <collection property="wareHouse" column="warseHouseId1" select="getWareHouse" ofType="WareHouse"></collection>
        <collection property="wastes" column="id" select="getWastes1" ofType="Wastes"></collection>
        <collection property="client" column="clientId" select="getClient1" ofType="Client" ></collection>
    </resultMap>
    <select id="getWastes1" parameterType="String" resultType="Wastes">
    select * from t_wastes where id=#{id}</select>
<select id="getWareHouse1" resultType="WareHouse">
        select * from t_pl_warehouse where warehouseId=#{warseHouseId}
    </select>
    <resultMap id="SalesManRM" type="Client">
        <collection property="salesman" column="salesmanId" select="getSalesMan" ofType="Salesman"></collection>
    </resultMap>
<select id="getClient1" resultType="Client">
        select * from client where clientId=#{clientId}
    </select>
    <select id="getSalesMan" resultType="Salesman">
        select * from salesman where salesmanId=#{salesmanId}
    </select>
    <!--更新出库单的数据-->
    <update id="updateOutBoundOrder" parameterType="OutboundOrder">
        update t_pl_outboundorder set  id=#{materialRequisitionOrder.wastes.id},
        clientId=#{materialRequisitionOrder.client.clientId},
        salesmanId=#{materialRequisitionOrder.client.salesman.salesmanId}
        where outboundOrderId=#{outboundOrderId}
    </update>
   <select id="getSalesman1" resultType="Salesman">
    select * from salesman where salesmanId=#{salesmanId};
</select>
    <resultMap id="OutBoundOrderList" type="OutboundOrder" autoMapping="true">
        <!--领料单信息-->
        <collection property="materialRequisitionOrder" column="materialRequisitionId" select="getMaterialRequisitionOrder" ofType="MaterialRequisitionOrder"></collection>
        <!--危废信息-->
        <collection property="wastes" column="id" select="getWastes" ofType="Wastes"></collection>
       <!--业务员-->
        <collection property="salesman" column="salesmanId" select="getSalesman1" ofType="Salesman"></collection>
       <!--客户-->
        <collection property="client" column="clientId" select="getClient1" ofType="Client"></collection>
    </resultMap>
    <!--获取领料单信息-->
    <select id="getMaterialRequisitionOrder" resultType="MaterialRequisitionOrder" parameterType="String">
        select * from t_pl_materialrequisitionorder where materialRequisitionId=#{materialRequisitionId};
    </select>
    <!--根据配料单编号获取信息-->
<select id="getOutBoundByMId" parameterType="String" resultMap="OutBoundRM1">
    select * from t_pl_outboundorder where materialRequisitionId=#{materialRequisitionId}
</select>
    <!--获取出库单信息的接口-->
    <select id="getOutBoundOrderList"  resultMap="OutBoundOrderList">
        select  * from t_pl_outboundorder;
    </select>
    <!--添加危废出库单-->
    <insert id="addSecondary" parameterType="OutboundOrder">
        insert into t_pl_outboundorder(outboundOrderId,inboundOrderId,outboundNumber,nowTime,checkState,boundType,outboundDate,creator,departmentName) values
        (#{outboundOrderId},#{wasteInventory.inboundOrderId},#{outboundNumber},NOW(),'OutBounded',#{boundType},#{outboundDate},#{creator},#{departmentName});
    </insert>
    <resultMap id="RM1" type="OutboundOrder">
       <collection property="wasteInventory" column="inboundOrderId" ofType="WasteInventory" select="getWasteInventory"></collection>
    </resultMap>
    <select id="getWasteInventory" resultMap="WasteInventoryRM" parameterType="String">
        select * from  t_pl_wasteinventory where inboundOrderId=#{inboundOrderId}
    </select>
    <resultMap id="WasteInventoryRM" type="WasteInventory">
        <collection property="produceCompany" column="clientId" select="getClient"></collection>
        <collection property="wastes" column="id" select="getWastes"></collection>
        <collection property="wareHouse" column="warseHouseId" select="getWareHouse"></collection>
    </resultMap>
    <!--根据入库单号-->
    <select id="getOutBoundByInId" parameterType="String" resultMap="RM1">
        select * from t_pl_outboundorder where inboundOrderId=#{inboundOrderId};
    </select>
    <!--更新次生出库单信息-->
    <update id="updateSecOutBoundOrder" parameterType="OutboundOrder">
     update  t_pl_outboundorder set
      id=#{wasteInventory.wastes.id},
      clientId=#{wasteInventory.produceCompany.clientId},
      salesmanId=#{wasteInventory.produceCompany.salesman.salesmanId},
      wareHouseId=#{wasteInventory.wareHouse.wareHouseId}
      where inboundOrderId=#{wasteInventory.inboundOrderId}
    </update>
    <update id="upWastesInventoryNumber" parameterType="OutboundOrder">
        update t_pl_wasteinventory set actualCount=actualCount-#{outboundNumber}
        where t_pl_wasteinventory.inboundOrderId=#{wasteInventory.inboundOrderId};
    </update>
</mapper>